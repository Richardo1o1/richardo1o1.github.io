<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>New structure for utility</title>
  
  
  <link href="http://yunminitools.cn/atom.xml" rel="self"/>
  
  <link href="http://yunminitools.cn/"/>
  <updated>2023-11-05T02:35:56.372Z</updated>
  <id>http://yunminitools.cn/</id>
  
  <author>
    <name>Richard Z.</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>设置ssh代理解决git pull慢的问题</title>
    <link href="http://yunminitools.cn/2023/11/05/ssh-proxy-github-slow-resolve/"/>
    <id>http://yunminitools.cn/2023/11/05/ssh-proxy-github-slow-resolve/</id>
    <published>2023-11-05T02:34:08.000Z</published>
    <updated>2023-11-05T02:35:56.372Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;最近Github特别慢，应该和网络关系比较大，查了一下，用设置代理方式搞定，具体步骤如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;搭建代理服务器&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;安装ncat 使用以下命令&lt;/p&gt;
 &lt;figure class=&quot;highlight</summary>
        
      
    
    
    
    <category term="日常练习" scheme="http://yunminitools.cn/categories/%E6%97%A5%E5%B8%B8%E7%BB%83%E4%B9%A0/"/>
    
    
    <category term="Linux" scheme="http://yunminitools.cn/tags/Linux/"/>
    
    <category term="Github" scheme="http://yunminitools.cn/tags/Github/"/>
    
  </entry>
  
  <entry>
    <title>Taylor Swift 纽约大学演讲（节选）</title>
    <link href="http://yunminitools.cn/2023/09/17/Taylor-Swift-NYC-Speech/"/>
    <id>http://yunminitools.cn/2023/09/17/Taylor-Swift-NYC-Speech/</id>
    <published>2023-09-17T10:40:04.000Z</published>
    <updated>2023-09-17T10:40:59.209Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;背景&quot;&gt;背景&lt;/h2&gt;
&lt;p&gt;Taylor Swift（泰勒·斯威夫特），1989年12月13日出生于美国宾夕法尼亚州，美国女歌手、词曲作者、音乐制作人、演员、纽约大学荣誉博士。&lt;br&gt;
2022年5月19日，泰勒于纽约大学2022届毕业典礼发表演讲并被授予 “艺术博士” 荣誉学位。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;荣誉博士学位（Honorary Doctoral Degree），也叫名誉博士学位，是世界多数国家通行授予的一种名誉性学术称号。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;演讲稿&quot;&gt;演讲稿&lt;/h2&gt;
&lt;p&gt;You went to NYU during a global pandemic, being essentially locked into your dorms and having to do classes over Zoom. Everyone in college during normal times stresses of about test scores. But on top of that, you also had to pass like a thousand COVID tests. I imagine the idea of a normal college experience was all you wanted to. But in this case, you and I both learned that you don’t always get all the things in the bag that you selected from the menu in the delivery surface. That is life. You get what you get.&lt;br&gt;
你们在全球大流行期间去了纽约大学，基本上被困在宿舍里，不得不通过Zoom上课。在正常时期上大学的人都会担心考试成绩，但除此之外，你们还必须通过数以千次的核酸检测。我可以想象，你们也渴望能够拥有正常的大学经历。但在这种情况下，你和我都学到了，很多时候你难以获得你所选择的。这就是生活。你得到的仅仅是你所能够得到的。&lt;/p&gt;</summary>
    
    
    
    <category term="当日所学" scheme="http://yunminitools.cn/categories/%E5%BD%93%E6%97%A5%E6%89%80%E5%AD%A6/"/>
    
    
    <category term="英语学习" scheme="http://yunminitools.cn/tags/%E8%8B%B1%E8%AF%AD%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>VUE页面刷新实战</title>
    <link href="http://yunminitools.cn/2023/09/13/vue-refresh-page-route/"/>
    <id>http://yunminitools.cn/2023/09/13/vue-refresh-page-route/</id>
    <published>2023-09-13T14:18:39.000Z</published>
    <updated>2023-09-13T14:19:18.388Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;背景&quot;&gt;背景&lt;/h2&gt;
&lt;p&gt;在进行VUE开发时，往往会出现需要实现当前页面操作完毕后，返回一个列表页面，如果用 this.$router.go(-1)</summary>
        
      
    
    
    
    <category term="日常练习" scheme="http://yunminitools.cn/categories/%E6%97%A5%E5%B8%B8%E7%BB%83%E4%B9%A0/"/>
    
    
    <category term="编程技巧" scheme="http://yunminitools.cn/tags/%E7%BC%96%E7%A8%8B%E6%8A%80%E5%B7%A7/"/>
    
    <category term="VUE" scheme="http://yunminitools.cn/tags/VUE/"/>
    
  </entry>
  
  <entry>
    <title>建立个人和组织的声望（转）</title>
    <link href="http://yunminitools.cn/2023/09/10/Building-personal-prestige/"/>
    <id>http://yunminitools.cn/2023/09/10/Building-personal-prestige/</id>
    <published>2023-09-10T06:06:40.000Z</published>
    <updated>2023-09-10T06:07:13.645Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;品牌-VS-声望&quot;&gt;品牌 VS 声望&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Brand&lt;/strong&gt; as a deliberately crafted, sustained narrative that is actively known about you. You don’t have to research Google engineering to have an opinion about Google engineering. In your career and as an engineering leader, you will likely be given the advice that it’s &lt;em&gt;very important&lt;/em&gt; to build a brand.&lt;br&gt;
品牌是一个经过精心打造、持续传播的叙事，它是人们主动了解你的方式。你不必研究谷歌的工程技术，就能对谷歌的工程技术有所见解。在你的职业生涯中，作为一名工程领导者，你很有可能会被建议：建立自己的品牌非常重要。&lt;br&gt;
If you participate frequently in social media, it’s easy to get sucked into its reality distortion field. When you spend a lot of time in a given online community, being well-known in that community feels equivalent to professional credibility. However, my experience is that few of the most successful folks I know are well-known online, and many of the most successful folks I know don’t create content online at all. Maybe they have an Instagram account, but it focuses on their family and non-professional interests.&lt;br&gt;
如果你经常参与社交媒体，很容易陷入其现实扭曲力场。当你在一个特定的在线社区花费大量时间时，在那个社区中广为人知似乎等同于专业信誉。然而，根据我的经验，我认识的许多最成功的人在线并不广为人知，而我认识的许多最成功的人根本不在线上创作内容。也许他们有一个Instagram账号，但它关注的是他们的家庭和非职业兴趣。&lt;br&gt;
Enough folks find this &lt;strong&gt;counter-intuitive&lt;/strong&gt; that I’ll emphasize this theme a bit. The majority of successful executives I’ve worked with don’t write online. They won’t post on Twitter or Mastodon. They haven’t written a book. They don’t speak at conferences. They don’t have a YouTube channel. They don’t stream on Twitch. In your engineering leadership career, you will at times be immersed in the message that you need to be creating content to be successful, but there’s abundant evidence to the contrary. You absolutely don’t have to do this sort of thing.&lt;br&gt;
足够多的人认为这一点与直觉相悖，因此我将强调这个主题。我与之合作过的大多数成功高管并不在网上写作。他们不会在Twitter或Mastodon上发帖。他们没有写过书。他们不会在会议上演讲。他们没有YouTube频道。他不在Twitch上直播。在你的工程领导生涯中，你有时会沉浸在这样一种信息中，即你需要创造内容才能成功，但有大量证据表明相反。你绝对不必做这种事情。&lt;br&gt;
Similarly, most Engineering organizations spend little time developing their external brand, and are not externally well-known. For every &lt;a href=&quot;https://engineering.fb.com/&quot;&gt;Meta Engineering blog&lt;/a&gt; or &lt;a href=&quot;https://netflixtechblog.com/&quot;&gt;Netflix Engineering blog&lt;/a&gt;, you’ll find hundreds of engineering organizations with limited public visibility around their work. Many of those silent organizations are doing very interesting work, they just don’t spend much time talking about it publicly. You can, without a doubt, be a successful engineering organization without ever doing any external communication to build your brand.&lt;br&gt;
同样，大多数工程组织很少花时间发展他们的外部品牌，也不为外界所熟知。在每一个Meta工程博客或Netflix工程博客之后，你会发现数百个工程组织几乎没有公开可见性。许多这些低调的组织正在做非常有趣的工作，只是他们不花太多时间公开谈论。毫无疑问，你可以在不做任何外部沟通来建立品牌的情况下成为一家成功的工程组织。&lt;/p&gt;</summary>
    
    
    
    <category term="当日所学" scheme="http://yunminitools.cn/categories/%E5%BD%93%E6%97%A5%E6%89%80%E5%AD%A6/"/>
    
    
    <category term="公司文化" scheme="http://yunminitools.cn/tags/%E5%85%AC%E5%8F%B8%E6%96%87%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>Docker迁移默认的/var/lib/docker 目录（避坑指南）</title>
    <link href="http://yunminitools.cn/2023/09/06/move-docker-data-folder/"/>
    <id>http://yunminitools.cn/2023/09/06/move-docker-data-folder/</id>
    <published>2023-09-06T08:17:12.000Z</published>
    <updated>2023-09-06T08:17:53.573Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;最近在做docker 数据文件的迁移，按指引创建，遇到了一些问题，把步骤和解决方案记录一下。&lt;/p&gt;
&lt;h2 id=&quot;1-停止docker服务&quot;&gt;1. 停止docker服务&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;systemctl stop</summary>
        
      
    
    
    
    <category term="日常练习" scheme="http://yunminitools.cn/categories/%E6%97%A5%E5%B8%B8%E7%BB%83%E4%B9%A0/"/>
    
    
    <category term="Docker" scheme="http://yunminitools.cn/tags/Docker/"/>
    
    <category term="Linux" scheme="http://yunminitools.cn/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Django -APIView的使用</title>
    <link href="http://yunminitools.cn/2023/08/07/Django-APIView-usage/"/>
    <id>http://yunminitools.cn/2023/08/07/Django-APIView-usage/</id>
    <published>2023-08-07T01:05:29.000Z</published>
    <updated>2023-08-07T01:17:00.640Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;1-APIView的使用：&quot;&gt;1.APIView的使用：&lt;/h2&gt;
&lt;h3 id=&quot;1-1-在-user-urls-py-中添加路由&quot;&gt;1.1 在 user/urls.py 中添加路由&lt;/h3&gt;
&lt;figure class=&quot;highlight</summary>
        
      
    
    
    
    <category term="日常练习" scheme="http://yunminitools.cn/categories/%E6%97%A5%E5%B8%B8%E7%BB%83%E4%B9%A0/"/>
    
    
    <category term="Django" scheme="http://yunminitools.cn/tags/Django/"/>
    
  </entry>
  
  <entry>
    <title>避免每次更新代码后Docker都重新安装依赖</title>
    <link href="http://yunminitools.cn/2023/08/02/Avoid-pip-docker-build/"/>
    <id>http://yunminitools.cn/2023/08/02/Avoid-pip-docker-build/</id>
    <published>2023-08-02T04:49:28.000Z</published>
    <updated>2023-08-02T04:50:23.600Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;背景&quot;&gt;背景&lt;/h2&gt;
&lt;p&gt;最简单的Dockerfile指令打包一个项目（以某python项目为例）：&lt;/p&gt;
&lt;figure class=&quot;highlight docker&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span</summary>
        
      
    
    
    
    <category term="日常练习" scheme="http://yunminitools.cn/categories/%E6%97%A5%E5%B8%B8%E7%BB%83%E4%B9%A0/"/>
    
    
    <category term="Docker" scheme="http://yunminitools.cn/tags/Docker/"/>
    
    <category term="Django" scheme="http://yunminitools.cn/tags/Django/"/>
    
  </entry>
  
  <entry>
    <title>问题解决 - Your configuration specifies to merge with the ref xxx</title>
    <link href="http://yunminitools.cn/2023/08/01/issue-resolve-1/"/>
    <id>http://yunminitools.cn/2023/08/01/issue-resolve-1/</id>
    <published>2023-08-01T06:19:15.000Z</published>
    <updated>2023-08-01T07:06:46.248Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;原因&quot;&gt;原因&lt;/h2&gt;
&lt;p&gt;在执行git pull的时候会报错:&lt;br&gt;
Your configuration specifies to merge with the ref ‘refs/heads/master’ from the remote, but</summary>
        
      
    
    
    
    <category term="日常练习" scheme="http://yunminitools.cn/categories/%E6%97%A5%E5%B8%B8%E7%BB%83%E4%B9%A0/"/>
    
    
    <category term="Github" scheme="http://yunminitools.cn/tags/Github/"/>
    
    <category term="Issue-resolve" scheme="http://yunminitools.cn/tags/Issue-resolve/"/>
    
  </entry>
  
  <entry>
    <title>本地项目连接Github</title>
    <link href="http://yunminitools.cn/2023/08/01/Local-project-link-github/"/>
    <id>http://yunminitools.cn/2023/08/01/Local-project-link-github/</id>
    <published>2023-08-01T06:17:13.000Z</published>
    <updated>2023-08-01T06:18:07.156Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;概述&quot;&gt;概述&lt;/h2&gt;
&lt;p&gt;本地有一些程序文件用Vim 编辑有点不方便，打算上传到github后，用网页编辑器编辑。下面是具体步骤&lt;/p&gt;
&lt;h2 id=&quot;一、建立本地仓库&quot;&gt;一、建立本地仓库&lt;/h2&gt;
&lt;h3 id=&quot;1-初始化本地仓库&quot;&gt;1.初始化本地仓库&lt;/h3&gt;
&lt;p&gt;git init&lt;/p&gt;
&lt;h3 id=&quot;2-添加所有文件&quot;&gt;2.添加所有文件&lt;/h3&gt;
&lt;p&gt;git add .&lt;/p&gt;</summary>
    
    
    
    <category term="日常练习" scheme="http://yunminitools.cn/categories/%E6%97%A5%E5%B8%B8%E7%BB%83%E4%B9%A0/"/>
    
    
    <category term="Github" scheme="http://yunminitools.cn/tags/Github/"/>
    
  </entry>
  
  <entry>
    <title>Django 简版 Docker 发布流程</title>
    <link href="http://yunminitools.cn/2023/07/30/Django-Docker-Release-Script/"/>
    <id>http://yunminitools.cn/2023/07/30/Django-Docker-Release-Script/</id>
    <published>2023-07-30T13:12:16.000Z</published>
    <updated>2023-07-30T13:12:53.169Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;概述&quot;&gt;概述&lt;/h2&gt;
&lt;p&gt;想实现通过开发系统打包Docker，上传到私有部署的Hub。生产系统下载更新包，发布新版本，以下是对应的脚本文件。&lt;/p&gt;
&lt;h2 id=&quot;开发系统打包上传&quot;&gt;开发系统打包上传&lt;/h2&gt;
&lt;p&gt;脚本文件：&lt;/p&gt;
&lt;figure</summary>
        
      
    
    
    
    <category term="日常练习" scheme="http://yunminitools.cn/categories/%E6%97%A5%E5%B8%B8%E7%BB%83%E4%B9%A0/"/>
    
    
    <category term="Docker" scheme="http://yunminitools.cn/tags/Docker/"/>
    
    <category term="Django" scheme="http://yunminitools.cn/tags/Django/"/>
    
  </entry>
  
  <entry>
    <title>U型思考介绍-2-问挖破立</title>
    <link href="http://yunminitools.cn/2023/07/30/U-Theory-2/"/>
    <id>http://yunminitools.cn/2023/07/30/U-Theory-2/</id>
    <published>2023-07-30T08:30:32.000Z</published>
    <updated>2023-07-30T08:31:16.292Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;pre class=&quot;mermaid&quot;&gt;graph LR
  U型思考 --&gt; 问
  U型思考 --&gt; 挖
  U型思考 --&gt; 破
  U型思考 --&gt; 立

  问--&gt; 认知差定胜负
  问--&gt; 透视U型思考
  问--&gt; 好问题的力量

  挖--&gt; 追问法
 </summary>
        
      
    
    
    
    <category term="日常练习" scheme="http://yunminitools.cn/categories/%E6%97%A5%E5%B8%B8%E7%BB%83%E4%B9%A0/"/>
    
    
    <category term="工具框架" scheme="http://yunminitools.cn/tags/%E5%B7%A5%E5%85%B7%E6%A1%86%E6%9E%B6/"/>
    
  </entry>
  
  <entry>
    <title>Docker如何搭建私有Registry镜像仓库</title>
    <link href="http://yunminitools.cn/2023/07/29/Docker-hub-creation-1/"/>
    <id>http://yunminitools.cn/2023/07/29/Docker-hub-creation-1/</id>
    <published>2023-07-29T14:46:42.000Z</published>
    <updated>2023-07-29T14:48:26.224Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;概述&quot;&gt;概述&lt;/h2&gt;
&lt;p&gt;仓库（Repository）是集中存放镜像的地方。&lt;br&gt;
一个容易混淆的概念是注册服务器（Registry）。实际上注册服务器是管理仓库的具体服务器，每个服务器上可以有多个仓库，而每个仓库下面有多个镜像。从这方面来说，仓库可以被认为是一个具体的项目或目录。例如对于仓库地址 &lt;a href=&quot;http://docker.io/ubuntu&quot;&gt;docker.io/ubuntu&lt;/a&gt; 来说，&lt;a href=&quot;http://docker.io&quot;&gt;docker.io&lt;/a&gt; 是注册服务器地址，ubuntu 是仓库名。&lt;br&gt;
大部分时候，并不需要严格区分这两者的概念。&lt;/p&gt;
&lt;h2 id=&quot;私有仓库搭建&quot;&gt;私有仓库搭建&lt;/h2&gt;
&lt;p&gt;有时候使用 Docker Hub 这样的公共仓库可能不方便，用户可以创建一个本地仓库供私人使用。&lt;br&gt;
docker-registry 是官方提供的工具，可以用于构建私有的镜像仓库。&lt;/p&gt;
&lt;h2 id=&quot;获取镜像-启动服务&quot;&gt;获取镜像/启动服务&lt;/h2&gt;
&lt;p&gt;说明：registry 镜像选择 registry:2 和 registry:2.4.1 都可以。&lt;br&gt;
拉取私有镜像仓库&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker pull registry:2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker run -d -v /opt/registry:/var/lib/registry -p 5000:5000 --name myregistry registry:2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="日常练习" scheme="http://yunminitools.cn/categories/%E6%97%A5%E5%B8%B8%E7%BB%83%E4%B9%A0/"/>
    
    
    <category term="Docker" scheme="http://yunminitools.cn/tags/Docker/"/>
    
    <category term="Linux" scheme="http://yunminitools.cn/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>耦合度以及降低耦合度的方法</title>
    <link href="http://yunminitools.cn/2023/07/28/Methods-of-reducing-coupling/"/>
    <id>http://yunminitools.cn/2023/07/28/Methods-of-reducing-coupling/</id>
    <published>2023-07-28T07:52:11.000Z</published>
    <updated>2023-07-28T07:57:06.289Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2</summary>
        
      
    
    
    
    <category term="当日所学" scheme="http://yunminitools.cn/categories/%E5%BD%93%E6%97%A5%E6%89%80%E5%AD%A6/"/>
    
    
    <category term="架构设计" scheme="http://yunminitools.cn/tags/%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>系统性能调优-学习笔记1</title>
    <link href="http://yunminitools.cn/2023/07/28/System-performance-tuning/"/>
    <id>http://yunminitools.cn/2023/07/28/System-performance-tuning/</id>
    <published>2023-07-28T07:50:13.000Z</published>
    <updated>2023-07-28T07:51:49.761Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;基本知识&quot;&gt;基本知识&lt;/h2&gt;
&lt;p&gt;大型网站架构设计必备的三板斧：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;高性能架构设计&lt;/strong&gt;： 熟悉系统常见性能优化手段比如引入 读写分离、缓存、负载均衡、异步</summary>
        
      
    
    
    
    <category term="当日所学" scheme="http://yunminitools.cn/categories/%E5%BD%93%E6%97%A5%E6%89%80%E5%AD%A6/"/>
    
    
    <category term="架构设计" scheme="http://yunminitools.cn/tags/%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>4S方法设计系统</title>
    <link href="http://yunminitools.cn/2023/07/28/4S-System-Design-Methodology/"/>
    <id>http://yunminitools.cn/2023/07/28/4S-System-Design-Methodology/</id>
    <published>2023-07-28T07:05:58.000Z</published>
    <updated>2023-07-28T08:54:32.113Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;概述&quot;&gt;概述&lt;/h2&gt;
&lt;p&gt;所谓4S分析法中的4S是指：&lt;br&gt;
Scenario（场景），Service（服务），Storage（存储），Scale（扩展）。&lt;br&gt;
接下来，我们结合4S分析法来具体回答一道常见系统设计题：如何设计一个推特？&lt;/p&gt;
&lt;h2</summary>
        
      
    
    
    
    <category term="当日所学" scheme="http://yunminitools.cn/categories/%E5%BD%93%E6%97%A5%E6%89%80%E5%AD%A6/"/>
    
    
    <category term="架构设计" scheme="http://yunminitools.cn/tags/%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>U型思考介绍-1</title>
    <link href="http://yunminitools.cn/2023/07/27/U-Theory-1/"/>
    <id>http://yunminitools.cn/2023/07/27/U-Theory-1/</id>
    <published>2023-07-27T02:22:18.000Z</published>
    <updated>2023-07-27T02:24:15.073Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;什么是U型思维呢？&lt;/p&gt;
&lt;p&gt;U型思维是指先向下挖掘出问题本质，然后基于本质再来做决策的思考方式。它与上面直线式的思考相对应，因为思维链路有点像U，所以叫它U型思维，也可以叫它本质思考或者第二性思考。&lt;/p&gt;
&lt;p&gt;&lt;img</summary>
        
      
    
    
    
    <category term="当日所学" scheme="http://yunminitools.cn/categories/%E5%BD%93%E6%97%A5%E6%89%80%E5%AD%A6/"/>
    
    
    <category term="工具框架" scheme="http://yunminitools.cn/tags/%E5%B7%A5%E5%85%B7%E6%A1%86%E6%9E%B6/"/>
    
  </entry>
  
  <entry>
    <title>conda 创建、激活、退出、删除虚拟环境 (Anaconda)</title>
    <link href="http://yunminitools.cn/2023/07/25/conda-command-create-activate/"/>
    <id>http://yunminitools.cn/2023/07/25/conda-command-create-activate/</id>
    <published>2023-07-25T03:39:55.000Z</published>
    <updated>2023-07-25T03:41:45.249Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;在Anaconda中conda可以理解为一个工具，也是一个可执行命令，其核心功能是包管理与环境管理。所以对虚拟环境进行创建、删除等操作需要使用conda命令。&lt;/p&gt;
&lt;h1&gt;conda 本地环境常用操作&lt;/h1&gt;
&lt;figure class=&quot;highlight</summary>
        
      
    
    
    
    <category term="日常练习" scheme="http://yunminitools.cn/categories/%E6%97%A5%E5%B8%B8%E7%BB%83%E4%B9%A0/"/>
    
    
    <category term="Python" scheme="http://yunminitools.cn/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>FRP内网穿透实际操作</title>
    <link href="http://yunminitools.cn/2023/07/06/frp-NAT-intranet-remote-control/"/>
    <id>http://yunminitools.cn/2023/07/06/frp-NAT-intranet-remote-control/</id>
    <published>2023-07-06T14:14:40.000Z</published>
    <updated>2023-07-06T14:20:07.493Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;为什么要内网穿透&quot;&gt;为什么要内网穿透&lt;/h2&gt;
&lt;p&gt;内网穿透，也即 NAT 穿透，进行 NAT 穿透是为了使具有某一个特定源 IP 地址和源端口号的数据包不被 NAT 设备屏蔽而正确路由到内网主机。 说人话就是我们想在不连接家里的wifi的情况下访问我们家里面的电脑和其他设备时，由于家庭宽带没有固定的公网ip使得我们无法向访问云服务器一样 直接访问，这时候我们就需要使用到内网穿透技术，让我们在其他网络下也能访问到处于内网环境的设备。而内网穿透的工具也有很多如： - 花生壳 - nat123 - ngrok - frp，本文主要讲FRP的搭建和使用，这个方案基本免费，仅需要一个有公网IP的服务器。我用的是腾讯云的服务器。&lt;/p&gt;
&lt;h2 id=&quot;什么是FRP&quot;&gt;什么是FRP&lt;/h2&gt;
&lt;p&gt;Frp (Fast Reverse Proxy) 是比较流行的一款。FRP 是一个免费开源的用于内网穿透的反向代理应用，它支持 TCP、UDP 协议， 也为 http 和 https 协议提供了额外的支持。你可以粗略理解它是一个中转站， 帮你实现 公网 ←→ FRP(服务器) ←→ 内网 的连接，让内网里的设备也可以被公网访问到。&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//github.com/fatedier/frp&quot;&gt;仓库地址&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;安装FRP&quot;&gt;安装FRP&lt;/h2&gt;</summary>
    
    
    
    <category term="日常练习" scheme="http://yunminitools.cn/categories/%E6%97%A5%E5%B8%B8%E7%BB%83%E4%B9%A0/"/>
    
    
    <category term="Linux" scheme="http://yunminitools.cn/tags/Linux/"/>
    
    <category term="远程控制" scheme="http://yunminitools.cn/tags/%E8%BF%9C%E7%A8%8B%E6%8E%A7%E5%88%B6/"/>
    
  </entry>
  
  <entry>
    <title>系统地测试变化的策略</title>
    <link href="http://yunminitools.cn/2023/06/16/test-changes-systematically-strategy/"/>
    <id>http://yunminitools.cn/2023/06/16/test-changes-systematically-strategy/</id>
    <published>2023-06-16T13:10:48.000Z</published>
    <updated>2023-06-16T13:14:05.946Z</updated>
    
    
    <summary type="html">&lt;p&gt;有时很难确定一个改变（例如，新的指示或新的设计）是使系统变得更好还是更糟。通过查看一些示例可能可以暗示哪个更好，但是对于小样本量来说，很难区分是真正的改进还是随机运气。也许这个改变对某些输入的性能有所帮助，但对其他输入的性能有所损害。&lt;br&gt;
评估程序（或“评估”）对于优化系统设计是有用的。好的评估具备以下特点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;代表真实世界的使用情况（或至少具备多样性）&lt;/li&gt;
&lt;li&gt;包含许多测试案例以获得更大的统计能力（请参考下表以获取指导方针）&lt;/li&gt;
&lt;li&gt;易于自动化或重复执行&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;输出的评估可以由计算机、人类或二者结合来进行。计算机可以通过客观标准（例如，具有单一正确答案的问题）自动化评估，也可以通过一些主观或模糊标准进行评估，其中模型的输出由其他模型查询来评估。OpenAI Evals是一个开源软件框架，提供了创建自动评估的工具。&lt;br&gt;
基于模型的评估在存在一系列可能的输出，且这些输出在质量上被认为是相等的情况下（例如，对于需要长答案的问题）是有用的。基于模型的评估与需要人类进行评估的情况之间的界限是模糊的，并且随着模型能力的提升，这个界限不断变化。我们鼓励进行实验，以确定基于模型的评估在您的用例中的效果如何。&lt;/p&gt;
&lt;h2 id=&quot;通过与黄金标准答案对比评估模型输出结果&quot;&gt;通过与黄金标准答案对比评估模型输出结果&lt;/h2&gt;
&lt;p&gt;假设我们已知问题的正确答案应该涉及到一组特定的已知事实。然后我们可以使用模型查询来计算答案中包含的必要事实的数量。&lt;/p&gt;
&lt;p&gt;例如，使用以下系统消息：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Role&lt;/th&gt;
&lt;th&gt;Prompt&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;SYSTEM&lt;/td&gt;
&lt;td&gt;You will be provided with text delimited by triple quotes that is supposed to be the answer to a question. Check if the following pieces of information are directly contained in the answer:&lt;br&gt;- Neil Armstrong was the first person to walk on the moon.&lt;br&gt;- The date Neil Armstrong first walked on the moon was July 21, 1969.&lt;br&gt;For each of these points perform the following steps:&lt;br&gt;1 - Restate the point.&lt;br&gt;2 - Provide a citation from the answer which is closest to this point.&lt;br&gt;3 - Consider if someone reading the citation who doesn’t know the topic could directly infer the point. Explain why or why not before making up your mind.&lt;br&gt;4 - Write “yes” if the answer to 3 was yes, otherwise write “no”.&lt;br&gt;Finally, provide a count of how many “yes” answers there are. Provide this count as {“count”: &lt;insert count here&gt;}.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;</summary>
    
    
    
    <category term="当日所学" scheme="http://yunminitools.cn/categories/%E5%BD%93%E6%97%A5%E6%89%80%E5%AD%A6/"/>
    
    
    <category term="人工智能" scheme="http://yunminitools.cn/tags/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/"/>
    
    <category term="AIGC" scheme="http://yunminitools.cn/tags/AIGC/"/>
    
  </entry>
  
  <entry>
    <title>使用外部工具的策略</title>
    <link href="http://yunminitools.cn/2023/06/15/Use-external-tools-strategy/"/>
    <id>http://yunminitools.cn/2023/06/15/Use-external-tools-strategy/</id>
    <published>2023-06-15T15:13:54.000Z</published>
    <updated>2023-06-16T13:27:31.823Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2</summary>
        
      
    
    
    
    <category term="当日所学" scheme="http://yunminitools.cn/categories/%E5%BD%93%E6%97%A5%E6%89%80%E5%AD%A6/"/>
    
    
    <category term="人工智能" scheme="http://yunminitools.cn/tags/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/"/>
    
    <category term="AIGC" scheme="http://yunminitools.cn/tags/AIGC/"/>
    
  </entry>
  
</feed>
