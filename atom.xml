<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>New structure for utility</title>
  
  
  <link href="http://yunminitools.cn/atom.xml" rel="self"/>
  
  <link href="http://yunminitools.cn/"/>
  <updated>2023-04-19T15:50:21.554Z</updated>
  <id>http://yunminitools.cn/</id>
  
  <author>
    <name>Richard Z.</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>VUE练习4 - 使用Ant Design</title>
    <link href="http://yunminitools.cn/2023/04/19/VUE-Exercise-4/"/>
    <id>http://yunminitools.cn/2023/04/19/VUE-Exercise-4/</id>
    <published>2023-04-19T15:49:43.000Z</published>
    <updated>2023-04-19T15:50:21.554Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;1-安装&quot;&gt;1 安装&lt;/h2&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td</summary>
        
      
    
    
    
    <category term="日常练习" scheme="http://yunminitools.cn/categories/%E6%97%A5%E5%B8%B8%E7%BB%83%E4%B9%A0/"/>
    
    
    <category term="编程技巧" scheme="http://yunminitools.cn/tags/%E7%BC%96%E7%A8%8B%E6%8A%80%E5%B7%A7/"/>
    
    <category term="前端技术" scheme="http://yunminitools.cn/tags/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/"/>
    
    <category term="VUE" scheme="http://yunminitools.cn/tags/VUE/"/>
    
  </entry>
  
  <entry>
    <title>论文学习 - Bitcoin：A Peer-to-Peer Electronic Cash System（8）</title>
    <link href="http://yunminitools.cn/2023/04/18/A-Peer-to-Peer-Electronic-Cash-System-8/"/>
    <id>http://yunminitools.cn/2023/04/18/A-Peer-to-Peer-Electronic-Cash-System-8/</id>
    <published>2023-04-18T14:40:00.000Z</published>
    <updated>2023-04-18T14:40:40.821Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h1&gt;比特币：一个点对点的电子货币系统&lt;/h1&gt;
&lt;h2 id=&quot;10-隐私&quot;&gt;10 隐私&lt;/h2&gt;
&lt;p&gt;10 Privacy&lt;br&gt;
The traditional banking model achieves a level of privacy by limiting</summary>
        
      
    
    
    
    <category term="当日所学" scheme="http://yunminitools.cn/categories/%E5%BD%93%E6%97%A5%E6%89%80%E5%AD%A6/"/>
    
    
    <category term="比特币" scheme="http://yunminitools.cn/tags/%E6%AF%94%E7%89%B9%E5%B8%81/"/>
    
    <category term="论文学习" scheme="http://yunminitools.cn/tags/%E8%AE%BA%E6%96%87%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>VUE练习3 - 使用域名</title>
    <link href="http://yunminitools.cn/2023/04/17/VUE-Exercise-3/"/>
    <id>http://yunminitools.cn/2023/04/17/VUE-Exercise-3/</id>
    <published>2023-04-17T14:45:32.000Z</published>
    <updated>2023-04-17T14:46:12.621Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;1-配置vue-config-js&quot;&gt;1 配置vue.config.js&lt;/h2&gt;
&lt;figure class=&quot;highlight jsx&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span</summary>
        
      
    
    
    
    <category term="日常练习" scheme="http://yunminitools.cn/categories/%E6%97%A5%E5%B8%B8%E7%BB%83%E4%B9%A0/"/>
    
    
    <category term="编程技巧" scheme="http://yunminitools.cn/tags/%E7%BC%96%E7%A8%8B%E6%8A%80%E5%B7%A7/"/>
    
    <category term="前端技术" scheme="http://yunminitools.cn/tags/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/"/>
    
    <category term="VUE" scheme="http://yunminitools.cn/tags/VUE/"/>
    
  </entry>
  
  <entry>
    <title>VUE练习2 - 使用axios模块</title>
    <link href="http://yunminitools.cn/2023/04/16/VUE-Exercise-2/"/>
    <id>http://yunminitools.cn/2023/04/16/VUE-Exercise-2/</id>
    <published>2023-04-16T07:22:34.000Z</published>
    <updated>2023-04-16T07:23:26.920Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;1-安装axios&quot;&gt;1 安装axios&lt;/h2&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;项目根目录下执行如下指令&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm install -S axios --registry https://registry.npm.taobao.org&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;2-修改模块代码&quot;&gt;2 修改模块代码&lt;/h2&gt;
&lt;p&gt;在开发过程中，我们可能经常会在前端项目的业务里面使用到某些变量，我们可以添加到配置文件中，比如我们在src目录下创建一个settings.js文件：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;/settings.js&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight jsx&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt; &amp;#123; &lt;span class=&quot;comment&quot;&gt;// 注意，对象要抛出后，其他文件中才能引入使用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;host&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&amp;#x27;http://api.yunminitools.cn:8000&amp;#x27;&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;// 我们的后台项目将来就通过这个域名和端口来启动&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="日常练习" scheme="http://yunminitools.cn/categories/%E6%97%A5%E5%B8%B8%E7%BB%83%E4%B9%A0/"/>
    
    
    <category term="编程技巧" scheme="http://yunminitools.cn/tags/%E7%BC%96%E7%A8%8B%E6%8A%80%E5%B7%A7/"/>
    
    <category term="前端技术" scheme="http://yunminitools.cn/tags/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/"/>
    
    <category term="VUE" scheme="http://yunminitools.cn/tags/VUE/"/>
    
  </entry>
  
  <entry>
    <title>VUE练习1 - 添加页面</title>
    <link href="http://yunminitools.cn/2023/04/15/VUE-Exercise-1/"/>
    <id>http://yunminitools.cn/2023/04/15/VUE-Exercise-1/</id>
    <published>2023-04-15T15:47:35.000Z</published>
    <updated>2023-04-16T02:14:00.987Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;1-Vue-的目录结构&quot;&gt;1 Vue 的目录结构&lt;/h2&gt;
&lt;figure class=&quot;highlight jsx&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;src/         主开发目录，要开发的客户端代码文件（单文件组件，样式、工具函数等等）全部在这个目录下&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt;/      静态资源目录，项目中的静态资源(css，js，图片等文件)放在这个文件夹&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dist/        项目打包发布文件夹，目前没有这个文件夹，最后要上线单文件项目文件都在这个文件夹中	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		         后面使用npm build 打包项目，让项目中的vue组件经过编译变成js 代码以后,dist就出现了&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;node_modules/     node的包目录，项目运行的依赖包存储目录，&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  package.&lt;span class=&quot;property&quot;&gt;json&lt;/span&gt;和package-lock.&lt;span class=&quot;property&quot;&gt;json&lt;/span&gt;文件中会自动记录了这个目录下所有的包以及包的版本信息，&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  如果node_modules没有，但是有package.&lt;span class=&quot;property&quot;&gt;json&lt;/span&gt;，则可以在终端下，通过npm install进行恢复。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;config/      配置目录，是环境配置目录与项目无关。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;build/       项目打包时依赖的目录&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;src/router/  路由，是我们创建项目的时候，如果选择安装vue-router，就自动会生成这个目录。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;src/assets/  静态资源存储目录，与&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt;目录作用类似。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;src/components/  组件存储目录，就是浏览器中用户看到的页面的一部分内容。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;src/views/       组件存储目录，就是浏览器中用户看到的页面内容，views往往会加载并包含components中的组件进来&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;2-执行流程图&quot;&gt;2 执行流程图&lt;/h2&gt;
&lt;pre class=&quot;mermaid&quot;&gt;graph TD
A(index.html 全局唯一入口)--&gt;B(main.js VUE项目初始化入口)
B--&gt;C(App.vue 根组件/路由)
C--&gt;D1(首页页面组件)
C--&gt;D2(登录页面组件)
C--&gt;D3(商品页面组件)
D1--&gt;E1(头部子组件)
D2--&gt;E1
D3--&gt;E1
D2--&gt;E2(脚部子组件)
D1--&gt;E2
D3--&gt;E2
F(router/index.js 配置路由)--&gt;C&lt;/pre&gt;</summary>
    
    
    
    <category term="日常练习" scheme="http://yunminitools.cn/categories/%E6%97%A5%E5%B8%B8%E7%BB%83%E4%B9%A0/"/>
    
    
    <category term="编程技巧" scheme="http://yunminitools.cn/tags/%E7%BC%96%E7%A8%8B%E6%8A%80%E5%B7%A7/"/>
    
    <category term="前端技术" scheme="http://yunminitools.cn/tags/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/"/>
    
    <category term="VUE" scheme="http://yunminitools.cn/tags/VUE/"/>
    
  </entry>
  
  <entry>
    <title>Javascript 箭头函数</title>
    <link href="http://yunminitools.cn/2023/04/14/javascript-arrow-function/"/>
    <id>http://yunminitools.cn/2023/04/14/javascript-arrow-function/</id>
    <published>2023-04-14T15:05:13.000Z</published>
    <updated>2023-04-14T15:05:44.376Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;&lt;strong&gt;Javascript 箭头函数&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight jsx&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span</summary>
        
      
    
    
    
    <category term="日常练习" scheme="http://yunminitools.cn/categories/%E6%97%A5%E5%B8%B8%E7%BB%83%E4%B9%A0/"/>
    
    
    <category term="编程技巧" scheme="http://yunminitools.cn/tags/%E7%BC%96%E7%A8%8B%E6%8A%80%E5%B7%A7/"/>
    
    <category term="前端技术" scheme="http://yunminitools.cn/tags/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>论文学习 - Bitcoin：A Peer-to-Peer Electronic Cash System（7）</title>
    <link href="http://yunminitools.cn/2023/04/13/A-Peer-to-Peer-Electronic-Cash-System-7/"/>
    <id>http://yunminitools.cn/2023/04/13/A-Peer-to-Peer-Electronic-Cash-System-7/</id>
    <published>2023-04-13T13:46:32.000Z</published>
    <updated>2023-04-13T13:47:10.125Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h1&gt;比特币：一个点对点的电子货币系统&lt;/h1&gt;
&lt;h2 id=&quot;9-合并和分割货币&quot;&gt;9 合并和分割货币&lt;/h2&gt;
&lt;p&gt;9 Combining and Splitting Value&lt;br&gt;
Although it would be possible to handle</summary>
        
      
    
    
    
    <category term="当日所学" scheme="http://yunminitools.cn/categories/%E5%BD%93%E6%97%A5%E6%89%80%E5%AD%A6/"/>
    
    
    <category term="比特币" scheme="http://yunminitools.cn/tags/%E6%AF%94%E7%89%B9%E5%B8%81/"/>
    
    <category term="论文学习" scheme="http://yunminitools.cn/tags/%E8%AE%BA%E6%96%87%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>一个有趣的AI对话网站</title>
    <link href="http://yunminitools.cn/2023/04/12/app-myshell-ai/"/>
    <id>http://yunminitools.cn/2023/04/12/app-myshell-ai/</id>
    <published>2023-04-12T15:35:05.000Z</published>
    <updated>2023-04-12T15:47:14.214Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;分享一个有趣的AI对话网站：&lt;a href=&quot;https://app.myshell.ai/&quot;&gt;https://app.myshell.ai/&lt;/a&gt;，目前可以免费注册，国内访问也无压力，目前有4个角色都可以尝试。&lt;br&gt;
&lt;img</summary>
        
      
    
    
    
    <category term="有趣资源" scheme="http://yunminitools.cn/categories/%E6%9C%89%E8%B6%A3%E8%B5%84%E6%BA%90/"/>
    
    
    <category term="英语学习" scheme="http://yunminitools.cn/tags/%E8%8B%B1%E8%AF%AD%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>论文学习 - Bitcoin：A Peer-to-Peer Electronic Cash System（6）</title>
    <link href="http://yunminitools.cn/2023/04/11/A-Peer-to-Peer-Electronic-Cash-System-6/"/>
    <id>http://yunminitools.cn/2023/04/11/A-Peer-to-Peer-Electronic-Cash-System-6/</id>
    <published>2023-04-11T15:14:37.000Z</published>
    <updated>2023-04-11T15:15:08.894Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h1&gt;比特币：一个点对点的电子货币系统&lt;/h1&gt;
&lt;h2 id=&quot;8-简化的支付验证&quot;&gt;8.简化的支付验证&lt;/h2&gt;
&lt;p&gt;8.Simplified Payment Verification&lt;br&gt;
It is possible to verify payments</summary>
        
      
    
    
    
    <category term="当日所学" scheme="http://yunminitools.cn/categories/%E5%BD%93%E6%97%A5%E6%89%80%E5%AD%A6/"/>
    
    
    <category term="比特币" scheme="http://yunminitools.cn/tags/%E6%AF%94%E7%89%B9%E5%B8%81/"/>
    
    <category term="论文学习" scheme="http://yunminitools.cn/tags/%E8%AE%BA%E6%96%87%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>论文学习 - Bitcoin：A Peer-to-Peer Electronic Cash System（5）</title>
    <link href="http://yunminitools.cn/2023/04/10/A-Peer-to-Peer-Electronic-Cash-System-5/"/>
    <id>http://yunminitools.cn/2023/04/10/A-Peer-to-Peer-Electronic-Cash-System-5/</id>
    <published>2023-04-10T15:20:09.000Z</published>
    <updated>2023-04-10T15:20:47.869Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h1&gt;比特币：一个点对点的电子货币系统&lt;/h1&gt;
&lt;h2 id=&quot;6-激励&quot;&gt;6. 激励&lt;/h2&gt;
&lt;p&gt;6 Incentive&lt;br&gt;
By convention, the first transaction in a block is a special</summary>
        
      
    
    
    
    <category term="当日所学" scheme="http://yunminitools.cn/categories/%E5%BD%93%E6%97%A5%E6%89%80%E5%AD%A6/"/>
    
    
    <category term="比特币" scheme="http://yunminitools.cn/tags/%E6%AF%94%E7%89%B9%E5%B8%81/"/>
    
    <category term="论文学习" scheme="http://yunminitools.cn/tags/%E8%AE%BA%E6%96%87%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>论文学习 - Bitcoin：A Peer-to-Peer Electronic Cash System（4）</title>
    <link href="http://yunminitools.cn/2023/04/09/A-Peer-to-Peer-Electronic-Cash-System-4/"/>
    <id>http://yunminitools.cn/2023/04/09/A-Peer-to-Peer-Electronic-Cash-System-4/</id>
    <published>2023-04-09T06:08:39.000Z</published>
    <updated>2023-04-09T06:09:11.077Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h1&gt;比特币：一个点对点的电子货币系统&lt;/h1&gt;
&lt;h2 id=&quot;5-网络&quot;&gt;5. 网络&lt;/h2&gt;
&lt;p&gt;5 Network&lt;br&gt;
The steps to run the network are as follows:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;New</summary>
        
      
    
    
    
    <category term="当日所学" scheme="http://yunminitools.cn/categories/%E5%BD%93%E6%97%A5%E6%89%80%E5%AD%A6/"/>
    
    
    <category term="比特币" scheme="http://yunminitools.cn/tags/%E6%AF%94%E7%89%B9%E5%B8%81/"/>
    
    <category term="论文学习" scheme="http://yunminitools.cn/tags/%E8%AE%BA%E6%96%87%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>论文学习 - Bitcoin：A Peer-to-Peer Electronic Cash System（3）</title>
    <link href="http://yunminitools.cn/2023/04/08/A-Peer-to-Peer-Electronic-Cash-System-3/"/>
    <id>http://yunminitools.cn/2023/04/08/A-Peer-to-Peer-Electronic-Cash-System-3/</id>
    <published>2023-04-08T05:58:57.000Z</published>
    <updated>2023-04-08T05:59:33.612Z</updated>
    
    
    <summary type="html">&lt;h1&gt;比特币：一个点对点的电子货币系统&lt;/h1&gt;
&lt;h2 id=&quot;3-时间戳服务器&quot;&gt;3. 时间戳服务器&lt;/h2&gt;
&lt;p&gt;3  Timestamp Server&lt;br&gt;
The solution we propose begins with a timestamp server. A timestamp server works by taking a hash of a block of items to be timestamped and widely publishing the hash, such as in a newspaper or Usenet post [2-5]. The timestamp proves that the data must have existed at the time, obviously, in order to get into the hash. Each timestamp includes the previous timestamp in its hash, forming a chain, with each additional timestamp reinforcing the ones before it.&lt;br&gt;
&lt;img src=&quot;http://cdn.yunminitools.cn/blog/0407Timestamp-en.png&quot; alt=&quot; &quot;&gt;&lt;br&gt;
我们提出的方案从时间戳服务器开始。时间戳服务器计算包含多个需要被打时间戳的数据项的区块的哈希值并广泛地发布这个哈希值，就像在报纸或新闻组帖子里 [2-5]。时间戳能证明要得到这个哈希值，显然这些数据当时一定是存在的。每个时间戳的哈希值都纳入了上一个时间戳，形成一条链，后面的时间戳进一步增强前一个时间戳。&lt;br&gt;
&lt;img src=&quot;http://cdn.yunminitools.cn/blog/0407Timestamp-zh.png&quot; alt=&quot; &quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="当日所学" scheme="http://yunminitools.cn/categories/%E5%BD%93%E6%97%A5%E6%89%80%E5%AD%A6/"/>
    
    
    <category term="比特币" scheme="http://yunminitools.cn/tags/%E6%AF%94%E7%89%B9%E5%B8%81/"/>
    
    <category term="论文学习" scheme="http://yunminitools.cn/tags/%E8%AE%BA%E6%96%87%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>哈希函数和数字签名</title>
    <link href="http://yunminitools.cn/2023/04/07/Hash-Function-Digital-Signature/"/>
    <id>http://yunminitools.cn/2023/04/07/Hash-Function-Digital-Signature/</id>
    <published>2023-04-07T13:00:49.000Z</published>
    <updated>2023-04-07T13:01:48.380Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;1-哈希函数-Hash&quot;&gt;1. 哈希函数 Hash&lt;/h2&gt;
&lt;h3 id=&quot;1-1-概念&quot;&gt;1.1 概念&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Hash，一般翻译做&lt;strong&gt;散列&lt;/strong&gt;，也有直接音译为&lt;strong&gt;哈希&lt;/strong&gt;的。就是把任意长度的输入通过散列算法变换成固定长度的输出，该输出就是散列值。&lt;/li&gt;
&lt;li&gt;这种转换是一种压缩映射，也就是散列值的空间通常远小于输入的空间，不同的输入可能会散列成相同的输出，所以不可能从散列值来确定唯一的输入值。简单的说，就是一种将任意长度的消息压缩到某一固定长度的消息摘要的函数。&lt;/li&gt;
&lt;li&gt;单向散列函数：又称单向Hash函数、杂凑函数，就是把任意长的输入消息串变化成固定长的输出串且由输出串难以得到输入串的一种函数。这个输出串称为该消息的散列值。一般用于产生消息摘要，密钥加密等.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;1-2-特点&quot;&gt;1.2 特点&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;算法是公开的&lt;/li&gt;
&lt;li&gt;对相同数据运算,得到的结果是一样的&lt;/li&gt;
&lt;li&gt;对不同数据运算，如MD5得到的结果默认是128位,32个字符(16进制标识)。&lt;/li&gt;
&lt;li&gt;没法进行逆运算信息摘要。&lt;/li&gt;
&lt;li&gt;信息“指纹”，是用来做数据识别的。&lt;/li&gt;
&lt;li&gt;加密后密文的长度是定长的&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;1-3-用途&quot;&gt;1.3 用途&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;用户密码的加密&lt;/li&gt;
&lt;li&gt;搜索引擎，关键字识别(搜索多个关键字，先对每个关键字进行散列，然后多个关键字进行或运算，如果值一致则搜索结果一致)&lt;/li&gt;
&lt;li&gt;版权标注 对文件进行散列判断该文件是否是正版或原版的&lt;/li&gt;
&lt;li&gt;数字签名 (文件完整性验证 对整个文件进行散列，比较散列值判断文件是否完整或被篡改)&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="日常练习" scheme="http://yunminitools.cn/categories/%E6%97%A5%E5%B8%B8%E7%BB%83%E4%B9%A0/"/>
    
    
    <category term="数据安全" scheme="http://yunminitools.cn/tags/%E6%95%B0%E6%8D%AE%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>论文学习 - Bitcoin：A Peer-to-Peer Electronic Cash System（2）</title>
    <link href="http://yunminitools.cn/2023/04/06/A-Peer-to-Peer-Electronic-Cash-System-2/"/>
    <id>http://yunminitools.cn/2023/04/06/A-Peer-to-Peer-Electronic-Cash-System-2/</id>
    <published>2023-04-06T14:31:16.000Z</published>
    <updated>2023-04-06T14:34:06.984Z</updated>
    
    
    <summary type="html">&lt;h1&gt;比特币：一个点对点的电子货币系统&lt;/h1&gt;
&lt;h2 id=&quot;2-交易&quot;&gt;2. 交易&lt;/h2&gt;
&lt;p&gt;II. Transactions&lt;br&gt;
We define an electronic coin as a chain of digital signatures. Each owner transfers the coin to the next by digitally signing a hash of the previous transaction and the public key of the next owner and adding these to the end of the coin. A payee can verify the signatures to verify the chain of ownership.&lt;br&gt;
&lt;img src=&quot;http://cdn.yunminitools.cn/blog/0406Bitcoin1en.png&quot; alt=&quot; &quot;&gt;&lt;br&gt;
The problem of course is the payee can’t verify that one of the owners did not double-spend the coin. A common solution is to introduce a trusted central authority, or mint, that checks every transaction for double spending. After each transaction, the coin must be returned to the mint to issue a new coin, and only coins issued directly from the mint are trusted not to be double-spent. The problem with this solution is that the fate of the entire money system depends on the company running the mint, with every transaction having to go through them, just like a bank.&lt;br&gt;
We need a way for the payee to know that the previous owners did not sign any earlier transactions. For our purposes, the earliest transaction is the one that counts, so we don’t care about later attempts to double-spend. The only way to confirm &lt;strong&gt;the absence of a transaction&lt;/strong&gt; is to be aware of all transactions. In the mint based model, the mint was aware of all transactions and decided which arrived first. To accomplish this without a trusted party, transactions must be publicly announced [1], and we need a system for participants to agree on a single history of the order in which they were received. The payee needs proof that at the time of each transaction, the majority of nodes agreed it was the first received.&lt;/p&gt;</summary>
    
    
    
    <category term="当日所学" scheme="http://yunminitools.cn/categories/%E5%BD%93%E6%97%A5%E6%89%80%E5%AD%A6/"/>
    
    
    <category term="比特币" scheme="http://yunminitools.cn/tags/%E6%AF%94%E7%89%B9%E5%B8%81/"/>
    
    <category term="论文学习" scheme="http://yunminitools.cn/tags/%E8%AE%BA%E6%96%87%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>Is-A 和 Has-A 的取舍</title>
    <link href="http://yunminitools.cn/2023/04/06/Choose-Is-A-Has-B/"/>
    <id>http://yunminitools.cn/2023/04/06/Choose-Is-A-Has-B/</id>
    <published>2023-04-06T08:09:59.000Z</published>
    <updated>2023-04-06T08:14:12.981Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;问题&quot;&gt;问题&lt;/h2&gt;
&lt;p&gt;组合和继承是允许在新建的类中放入子对象。其中“&lt;strong&gt;Is-A&lt;/strong&gt; （是一个）”的关系是用继承来表达的，而“&lt;strong&gt;Has-A&lt;/strong&gt;（有一个）”的关系则是用组合来表达的。&lt;br&gt;
组合是显示的这样做的，而继承是隐式的做。组合一般是将现有的类型作为新类型底层实现的一部分来加以复用，在一个类中引用另一个类，而继承是拥有了父类的非私有方法。&lt;br&gt;
二者是之间有何区别？或者怎样在二者之间做出选择呢？&lt;/p&gt;
&lt;h2 id=&quot;优缺点分析&quot;&gt;优缺点分析&lt;/h2&gt;
&lt;p&gt;继承的优点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;子类可以重写父类的方法来方便地实现对父类的扩展。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;继承的缺点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;父类的内部细节对子类是可见的。&lt;/li&gt;
&lt;li&gt;子类从父类继承的方法在编译时就确定下来了，所以无法在运行期间改变从父类继承的方法的行为。&lt;/li&gt;
&lt;li&gt;如果对父类的方法做了修改的话（比如增加了一个参数），则子类的方法必须做出相应的修改。所以说子类与父类是一种高耦合，违背了面向对象思想。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;组合的优点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;当前对象只能通过所包含的那个对象去调用其方法，所以所包含的对象的内部细节对当前对象时不可见的。&lt;/li&gt;
&lt;li&gt;当前对象与包含的对象是一个低耦合关系，如果修改包含对象的类中代码不需要修改当前对象类的代码。&lt;/li&gt;
&lt;li&gt;当前对象可以在运行时动态的绑定所包含的对象。可以通过set方法给所包含对象赋值。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;组合的缺点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;容易产生过多的对象。&lt;/li&gt;
&lt;li&gt;为了能组合多个对象，必须仔细对接口进行定义。&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="当日所学" scheme="http://yunminitools.cn/categories/%E5%BD%93%E6%97%A5%E6%89%80%E5%AD%A6/"/>
    
    
    <category term="编程技巧" scheme="http://yunminitools.cn/tags/%E7%BC%96%E7%A8%8B%E6%8A%80%E5%B7%A7/"/>
    
    <category term="设计模式" scheme="http://yunminitools.cn/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>论文学习 - Bitcoin：A Peer-to-Peer Electronic Cash System（1）</title>
    <link href="http://yunminitools.cn/2023/04/05/A-Peer-to-Peer-Electronic-Cash-System-1/"/>
    <id>http://yunminitools.cn/2023/04/05/A-Peer-to-Peer-Electronic-Cash-System-1/</id>
    <published>2023-04-05T15:53:35.000Z</published>
    <updated>2023-04-06T14:35:10.840Z</updated>
    
    
    <summary type="html">&lt;h1&gt;比特币：一个点对点的电子货币系统&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Abstract.&lt;/strong&gt; A purely peer-to-peer version of electronic cash would allow online payments to be sent directly from one party to another without going through a financial institution. Digital signatures provide part of the solution, but the main benefits are lost if a trusted third party is still required to prevent double-spending. We propose a solution to the double-spending problem using a peer-to-peer network. The network timestamps transactions by hashing them into an ongoing chain of hash-based proof-of-work, forming a record that cannot be changed without redoing the proof-of-work. The longest chain not only serves as proof of the sequence of events witnessed, but proof that it came from the largest pool of CPU power. As long as a majority of CPU power is controlled by nodes that are not cooperating to attack the network, they’ll generate the longest chain and outpace attackers. The network itself requires minimal structure. Messages are broadcast on a best effort basis, and nodes can leave and rejoin the network at will, accepting the longest proof-of-work chain as proof of what happened while they were gone.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;摘要：&lt;/strong&gt;  本文提出了一种完全通过点对点技术实现的电子货币系统，它使得在线支付能够直接由一方发起并支付给另外一方，中间不需要通过任何的金融机构。虽然数字签名部分解决了这个问题，但是如果仍然需要可信任的第三方的支持才能防止重复支付的话，那么这种系统的也会失去价值。我们在此提出一种解决方案，使支付系统在点对点的环境下运行，并防止重复支付问题。&lt;strong&gt;该网络通过随机散列对全部交易加上时间戳，将它们合并入一个不断延伸的基于随机散列的工作量证明（proof-of-work）的链条作为交易记录&lt;/strong&gt;，除非重新完成全部的工作量证明，形成的交易记录将不可更改。最长的链条不仅将作为被观察到的事件序列的证明，而且被看做是来自 CPU计算能力最大的池。只要大多数的节点的CPU 计算能力没有被控制用来进行对全网的攻击，那么这些节点将会生成最长的、超过攻击者的链条。这个系统本身需要的基础设施非常少。信息尽最大努力在全网传播即可，节点可以随时离开和重新加入网络，并将接受最长的工作量证明链条作为在该节点离线期间发生的交易的证明。&lt;/p&gt;</summary>
    
    
    
    <category term="当日所学" scheme="http://yunminitools.cn/categories/%E5%BD%93%E6%97%A5%E6%89%80%E5%AD%A6/"/>
    
    
    <category term="比特币" scheme="http://yunminitools.cn/tags/%E6%AF%94%E7%89%B9%E5%B8%81/"/>
    
    <category term="论文学习" scheme="http://yunminitools.cn/tags/%E8%AE%BA%E6%96%87%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>初识数据埋点（二）</title>
    <link href="http://yunminitools.cn/2023/04/04/Event-Tracking-2/"/>
    <id>http://yunminitools.cn/2023/04/04/Event-Tracking-2/</id>
    <published>2023-04-04T14:53:37.000Z</published>
    <updated>2023-04-05T14:23:40.172Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;实际案例：&quot;&gt;实际案例：&lt;/h2&gt;
&lt;p&gt;**实例背景：**某汽车互联网公司，领导对负责新车业务的产品经理X君、负责二手车业务的产品经理Y君提出需求：对新车APP和二手车APP销售线索数据指标进行数据监控，如有超过5%的数据变动，则需要向上级汇报波动数值以及波动原因。&lt;br&gt;
&lt;strong&gt;名词注释：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;销售线索：通过事件记录到用户有明确的购买意向，记录行为的事件例如：电话咨询、短信询价、加入心愿单、收藏、特别关注等类型事件。记录一个用户即代表一个线索。&lt;/li&gt;
&lt;li&gt;数据波动：即(（当日数据-昨天数据）/昨日数据)*100%=环比数据波动&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;根据领导需求，假设定义短信砍价按钮与电话咨询按钮为销售线索指标，销售线索按钮页面的入口来源页面包含：页面A与页面B。&lt;br&gt;
X君与Y君分别设计了埋点方案，如图所示：&lt;br&gt;
&lt;img src=&quot;http://cdn.yunminitools.cn/blog/0405Tracking.png&quot; alt=&quot; &quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="当日所学" scheme="http://yunminitools.cn/categories/%E5%BD%93%E6%97%A5%E6%89%80%E5%AD%A6/"/>
    
    
    <category term="数据管理" scheme="http://yunminitools.cn/tags/%E6%95%B0%E6%8D%AE%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>软件系统解耦：理解依赖关系（二）</title>
    <link href="http://yunminitools.cn/2023/04/03/Software-system-decoupling-2/"/>
    <id>http://yunminitools.cn/2023/04/03/Software-system-decoupling-2/</id>
    <published>2023-04-03T14:05:54.000Z</published>
    <updated>2023-04-06T01:41:57.348Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;单向依赖与单一职责原则-SRP&quot;&gt;单向依赖与单一职责原则(SRP)&lt;/h2&gt;
&lt;p&gt;单向依赖是最简单的依赖。&lt;br&gt;
&lt;img src=&quot;http://cdn.yunminitools.cn/blog/0403SRP1.png&quot; alt=&quot; &quot;&gt;&lt;br&gt;
上述都是单向依赖的例子。其中，(1)是最理想的情况。当逻辑变复杂后，单个模块往往承担了过多的责任。即使模块之间可以保持简单的单向关系，模块内部各行为之间却形成高强度的耦合整体。根据单一职责原则(SRP)，这样的模块也是难以维护的，我们需要对模块做拆分。&lt;br&gt;
在有多个模块的情况下，(2)的依赖关系显然要好于(3)，因为在(2)中模块的依赖关系要比(3)少。这样的解释过于抽象，我们用游戏中比较典型的一个应用场景来说明一下。&lt;/p&gt;
&lt;p&gt;场景对象管理器GameObjectManager，管理着场景对象GameObjectInstance，而场景对象的构造需要资源AssetStore的支持。他们的调用关系，用(2)和(3)的模式分别实现一遍：&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//(2) GameObjectManager从AssetStore取资源数据，然后调用GameObjectInstnce的初始化流程&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title class_&quot;&gt;GameObjectManager&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;AssetForGameObject* &lt;span class=&quot;title&quot;&gt;GetAsset&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(DWORD dwID)&lt;/span&gt;&lt;/span&gt;&amp;#123;m_Asset.&lt;span class=&quot;built_in&quot;&gt;GetAsset&lt;/span&gt;(dwID);&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;GameObjectInstance* &lt;span class=&quot;title&quot;&gt;Create&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(DWORD dwAssetID)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        AssetForGameObject* pAsset = &lt;span class=&quot;built_in&quot;&gt;GetAsset&lt;/span&gt;(dwAssetID);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; m_GameObjects[dwNewID] = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;GameObjectInstance&lt;/span&gt;(pAsset);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;type&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;TickGameObject&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;foreach(&lt;span class=&quot;keyword&quot;&gt;auto&lt;/span&gt; go = m_GameObjects) go.&lt;span class=&quot;built_in&quot;&gt;Tick&lt;/span&gt;();&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    AssetStore m_Asset;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    map&amp;lt;DWORD, GameObjectInstance*&amp;gt; m_GameObjects;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//(3) GameObjectInstance自己调用AssetStore的方法取资源数据，做初始化&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title class_&quot;&gt;GameObjectManager&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;GameObjectInstance* &lt;span class=&quot;title&quot;&gt;Create&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(AssetStore* pAssets, DWORD dwAssetID)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        GameObjectInstance* pGo = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;GameObjectInstance&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        pGo-&amp;gt;&lt;span class=&quot;built_in&quot;&gt;Init&lt;/span&gt;(pAssets, dwAssetID);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; m_GameObjects[dwNewID] = pGo;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    AssetStore m_Asset;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    map&amp;lt;DWORD, GameObjectInstance*&amp;gt; m_GameObjects;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title class_&quot;&gt;GameObjectInstance&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;type&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Init&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(AssetStore* pAssets, DWORD dwAssetID)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        m_Data = pAssets-&amp;gt;&lt;span class=&quot;built_in&quot;&gt;GetAsset&lt;/span&gt;(dwAssetID);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;GameObjectInstance只需要依赖于AssetForGameObject，但是在依赖关系(3)中，却要依赖于一个范围更大的概念AssetStore。&lt;/p&gt;</summary>
    
    
    
    <category term="当日所学" scheme="http://yunminitools.cn/categories/%E5%BD%93%E6%97%A5%E6%89%80%E5%AD%A6/"/>
    
    
    <category term="编程技巧" scheme="http://yunminitools.cn/tags/%E7%BC%96%E7%A8%8B%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>软件系统解耦：理解依赖关系（一）</title>
    <link href="http://yunminitools.cn/2023/04/02/Software-system-decoupling-1/"/>
    <id>http://yunminitools.cn/2023/04/02/Software-system-decoupling-1/</id>
    <published>2023-04-02T15:00:17.000Z</published>
    <updated>2023-04-02T15:00:59.722Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;在实际工作中，复杂度上来后，各模块之间错综复杂，调用关系网千头万绪。即使有各种设计模式做指导，做出合理的设计也并不容易。程序员天天疲于应对层出不穷的变化，在不断紧逼的deadline压力下，面对巨大的重构工作量往往感到心有余而力不足。&lt;br&gt;
系统复杂度的根源除了业务本身的</summary>
        
      
    
    
    
    <category term="当日所学" scheme="http://yunminitools.cn/categories/%E5%BD%93%E6%97%A5%E6%89%80%E5%AD%A6/"/>
    
    
    <category term="编程技巧" scheme="http://yunminitools.cn/tags/%E7%BC%96%E7%A8%8B%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>初识数据埋点（一）</title>
    <link href="http://yunminitools.cn/2023/04/01/Event-Tracking-1/"/>
    <id>http://yunminitools.cn/2023/04/01/Event-Tracking-1/</id>
    <published>2023-04-01T14:53:37.000Z</published>
    <updated>2023-04-01T14:54:26.214Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;埋点概述&quot;&gt;&lt;strong&gt;埋点概述&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;数据埋点是数据产品经理、数据运营以及数据分析师，基于业务需求（例如：CPC点击付费广告中统计每一个广告位的点击次数），产品需求（例如：推荐系统中推荐商品的曝光次数以及点击的人数）对用户行为的每一个事件对应的位置进行开发埋点，并通过SDK上报埋点的数据结果，记录数据汇总后进行分析，推动产品优化或指导运营。&lt;br&gt;
埋点分析，是网站分析的一种常用的数据采集方法。数据埋点分为初级、中级、高级三种方式。数据埋点主流部署的方式有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;私有化部署（即部署在自己公司的服务器上，如果期望提高数据安全性，或者定制化的埋点方案较多，则适合私有部署，并开发一套针对自己公司定制化的数据后台查询系统保证数据的安全性和精确性，缺点是成本较高）。&lt;/li&gt;
&lt;li&gt;接入第三方服务，比如国内的某盟和国外的GA（Google Analytics）统计，在以后的文章中会单独介绍，此处不再展开。（优点是成本较低，部分基础服务免费，缺点是：数据会存在不安全的风险，另外一个就是只能进行通用的简单分析，无法定制化埋点方案）&lt;br&gt;
此处只展开初级：在产品、服务转化关键点植入统计代码，据其独立ID确保数据采集不重复（如收藏按钮点击率）；&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;主要的埋点事件分类：&quot;&gt;&lt;strong&gt;主要的埋点事件分类：&lt;/strong&gt;&lt;/h2&gt;
&lt;h3 id=&quot;点击事件：&quot;&gt;&lt;strong&gt;点击事件：&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;点击事件，用户点击按钮即算点击事件，不管点击后有无结果；&lt;/p&gt;
&lt;h3 id=&quot;曝光事件：&quot;&gt;&lt;strong&gt;曝光事件：&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;成功打开一次页面记一次，刷新页面一次记一次，加载下一页新页，加载一次记一次。home键切换到后台再进入页面，曝光事件不记；&lt;/p&gt;
&lt;h3 id=&quot;页面停留时间事件：&quot;&gt;&lt;strong&gt;页面停留时间事件：&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;表示一个用户在X页面的停留时长记为停留时长。例如：小明9:00访问了X网站首页，此时分析工具则开始为小明这个访问者记录1个Session（会话）。接着9:01小明又浏览了另外一个页面列表页，然后离开了网站（离开网站可以是通过关闭浏览器，或在地址栏键入一个不同的网址，或是点击了你网站上链接到其他网站的链接……）为了简单，我们把这个过程当做一个Session。&lt;br&gt;
则最终小明在首页的页面停留时间：&lt;br&gt;
&lt;strong&gt;（Time on Page，简称Tp）Tp(首页) = 9:01 – 9:00 = 1 分钟&lt;/strong&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="当日所学" scheme="http://yunminitools.cn/categories/%E5%BD%93%E6%97%A5%E6%89%80%E5%AD%A6/"/>
    
    
    <category term="数据管理" scheme="http://yunminitools.cn/tags/%E6%95%B0%E6%8D%AE%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
</feed>
