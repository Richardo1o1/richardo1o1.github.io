<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>New structure for utility</title>
  
  
  <link href="http://yunminitools.cn/atom.xml" rel="self"/>
  
  <link href="http://yunminitools.cn/"/>
  <updated>2023-04-05T15:55:10.332Z</updated>
  <id>http://yunminitools.cn/</id>
  
  <author>
    <name>Richard Z.</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>论文学习：Bitcoin - A Peer-to-Peer Electronic Cash System（1）</title>
    <link href="http://yunminitools.cn/2023/04/05/A-Peer-to-Peer-Electronic-Cash-System-1/"/>
    <id>http://yunminitools.cn/2023/04/05/A-Peer-to-Peer-Electronic-Cash-System-1/</id>
    <published>2023-04-05T15:53:35.000Z</published>
    <updated>2023-04-05T15:55:10.332Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h1&gt;比特币：一个点对点的电子货币系统&lt;/h1&gt;
&lt;p&gt;Abstract. A purely peer-to-peer version of electronic cash would allow online payments to be sent directly</summary>
        
      
    
    
    
    <category term="当日所学" scheme="http://yunminitools.cn/categories/%E5%BD%93%E6%97%A5%E6%89%80%E5%AD%A6/"/>
    
    
    <category term="比特币" scheme="http://yunminitools.cn/tags/%E6%AF%94%E7%89%B9%E5%B8%81/"/>
    
    <category term="论文学习" scheme="http://yunminitools.cn/tags/%E8%AE%BA%E6%96%87%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>初识数据埋点（二）</title>
    <link href="http://yunminitools.cn/2023/04/04/Event-Tracking-2/"/>
    <id>http://yunminitools.cn/2023/04/04/Event-Tracking-2/</id>
    <published>2023-04-04T14:53:37.000Z</published>
    <updated>2023-04-05T14:23:40.172Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;实际案例：&quot;&gt;实际案例：&lt;/h2&gt;
&lt;p&gt;**实例背景：**某汽车互联网公司，领导对负责新车业务的产品经理X君、负责二手车业务的产品经理Y君提出需求：对新车APP和二手车APP销售线索数据指标进行数据监控，如有超过5%的数据变动，则需要向上级汇报波动数值以及波动原因。&lt;br&gt;
&lt;strong&gt;名词注释：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;销售线索：通过事件记录到用户有明确的购买意向，记录行为的事件例如：电话咨询、短信询价、加入心愿单、收藏、特别关注等类型事件。记录一个用户即代表一个线索。&lt;/li&gt;
&lt;li&gt;数据波动：即(（当日数据-昨天数据）/昨日数据)*100%=环比数据波动&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;根据领导需求，假设定义短信砍价按钮与电话咨询按钮为销售线索指标，销售线索按钮页面的入口来源页面包含：页面A与页面B。&lt;br&gt;
X君与Y君分别设计了埋点方案，如图所示：&lt;br&gt;
&lt;img src=&quot;http://cdn.yunminitools.cn/blog/0405Tracking.png&quot; alt=&quot; &quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="当日所学" scheme="http://yunminitools.cn/categories/%E5%BD%93%E6%97%A5%E6%89%80%E5%AD%A6/"/>
    
    
    <category term="数据管理" scheme="http://yunminitools.cn/tags/%E6%95%B0%E6%8D%AE%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>软件系统解耦：理解依赖关系（二）</title>
    <link href="http://yunminitools.cn/2023/04/03/Software-system-decoupling-2/"/>
    <id>http://yunminitools.cn/2023/04/03/Software-system-decoupling-2/</id>
    <published>2023-04-03T14:05:54.000Z</published>
    <updated>2023-04-03T14:06:27.286Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;单向依赖与单一职责原则-SRP&quot;&gt;单向依赖与单一职责原则(SRP)&lt;/h2&gt;
&lt;p&gt;单向依赖是最简单的依赖。&lt;br&gt;
&lt;img src=&quot;http://cdn.yunminitools.cn/blog/0403SRP1.png&quot; alt=&quot; &quot;&gt;&lt;br&gt;
上述都是单向依赖的例子。其中，(1)是最理想的情况。当逻辑变复杂后，单个模块往往承担了过多的责任。即使模块之间可以保持简单的单向关系，模块内部各行为之间却形成高强度的耦合整体。根据单一职责原则(SRP)，这样的模块也是难以维护的，我们需要对模块做拆分。&lt;br&gt;
在有多个模块的情况下，(2)的依赖关系显然要好于(3)，因为在(2)中模块的依赖关系要比(3)少。这样的解释过于抽象，我们用游戏中比较典型的一个应用场景来说明一下。&lt;/p&gt;
&lt;p&gt;场景对象管理器GameObjectManager，管理着场景对象GameObjectInstance，而场景对象的构造需要资源AssetStore的支持。他们的调用关系，用(2)和(3)的模式分别实现一遍：&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//(2) GameObjectManager从AssetStore取资源数据，然后调用GameObjectInstnce的初始化流程&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title class_&quot;&gt;GameObjectManager&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;AssetForGameObject* &lt;span class=&quot;title&quot;&gt;GetAsset&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(DWORD dwID)&lt;/span&gt;&lt;/span&gt;&amp;#123;m_Asset.&lt;span class=&quot;built_in&quot;&gt;GetAsset&lt;/span&gt;(dwID);&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;GameObjectInstance* &lt;span class=&quot;title&quot;&gt;Create&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(DWORD dwAssetID)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        AssetForGameObject* pAsset = &lt;span class=&quot;built_in&quot;&gt;GetAsset&lt;/span&gt;(dwAssetID);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; m_GameObjects[dwNewID] = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;GameObjectInstance&lt;/span&gt;(pAsset);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;type&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;TickGameObject&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;foreach(&lt;span class=&quot;keyword&quot;&gt;auto&lt;/span&gt; go = m_GameObjects) go.&lt;span class=&quot;built_in&quot;&gt;Tick&lt;/span&gt;();&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    AssetStore m_Asset;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    map&amp;lt;DWORD, GameObjectInstance*&amp;gt; m_GameObjects;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//(3) GameObjectInstance自己调用AssetStore的方法取资源数据，做初始化&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title class_&quot;&gt;GameObjectManager&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;GameObjectInstance* &lt;span class=&quot;title&quot;&gt;Create&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(AssetStore* pAssets, DWORD dwAssetID)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        GameObjectInstance* pGo = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;GameObjectInstance&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        pGo-&amp;gt;&lt;span class=&quot;built_in&quot;&gt;Init&lt;/span&gt;(pAssets, dwAssetID);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; m_GameObjects[dwNewID] = pGo;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    AssetStore m_Asset;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    map&amp;lt;DWORD, GameObjectInstance*&amp;gt; m_GameObjects;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title class_&quot;&gt;GameObjectInstance&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;type&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Init&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(AssetStore* pAssets, DWORD dwAssetID)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        m_Data = pAssets-&amp;gt;&lt;span class=&quot;built_in&quot;&gt;GetAsset&lt;/span&gt;(dwAssetID);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;GameObjectInstance只需要依赖于AssetForGameObject，但是在依赖关系(3)中，却要依赖于一个范围更大的概念AssetStore。&lt;/p&gt;</summary>
    
    
    
    <category term="当日所学" scheme="http://yunminitools.cn/categories/%E5%BD%93%E6%97%A5%E6%89%80%E5%AD%A6/"/>
    
    
    <category term="编程技巧" scheme="http://yunminitools.cn/tags/%E7%BC%96%E7%A8%8B%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>软件系统解耦：理解依赖关系（一）</title>
    <link href="http://yunminitools.cn/2023/04/02/Software-system-decoupling-1/"/>
    <id>http://yunminitools.cn/2023/04/02/Software-system-decoupling-1/</id>
    <published>2023-04-02T15:00:17.000Z</published>
    <updated>2023-04-02T15:00:59.722Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;在实际工作中，复杂度上来后，各模块之间错综复杂，调用关系网千头万绪。即使有各种设计模式做指导，做出合理的设计也并不容易。程序员天天疲于应对层出不穷的变化，在不断紧逼的deadline压力下，面对巨大的重构工作量往往感到心有余而力不足。&lt;br&gt;
系统复杂度的根源除了业务本身的</summary>
        
      
    
    
    
    <category term="当日所学" scheme="http://yunminitools.cn/categories/%E5%BD%93%E6%97%A5%E6%89%80%E5%AD%A6/"/>
    
    
    <category term="编程技巧" scheme="http://yunminitools.cn/tags/%E7%BC%96%E7%A8%8B%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>初识数据埋点（一）</title>
    <link href="http://yunminitools.cn/2023/04/01/Event-Tracking-1/"/>
    <id>http://yunminitools.cn/2023/04/01/Event-Tracking-1/</id>
    <published>2023-04-01T14:53:37.000Z</published>
    <updated>2023-04-01T14:54:26.214Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;埋点概述&quot;&gt;&lt;strong&gt;埋点概述&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;数据埋点是数据产品经理、数据运营以及数据分析师，基于业务需求（例如：CPC点击付费广告中统计每一个广告位的点击次数），产品需求（例如：推荐系统中推荐商品的曝光次数以及点击的人数）对用户行为的每一个事件对应的位置进行开发埋点，并通过SDK上报埋点的数据结果，记录数据汇总后进行分析，推动产品优化或指导运营。&lt;br&gt;
埋点分析，是网站分析的一种常用的数据采集方法。数据埋点分为初级、中级、高级三种方式。数据埋点主流部署的方式有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;私有化部署（即部署在自己公司的服务器上，如果期望提高数据安全性，或者定制化的埋点方案较多，则适合私有部署，并开发一套针对自己公司定制化的数据后台查询系统保证数据的安全性和精确性，缺点是成本较高）。&lt;/li&gt;
&lt;li&gt;接入第三方服务，比如国内的某盟和国外的GA（Google Analytics）统计，在以后的文章中会单独介绍，此处不再展开。（优点是成本较低，部分基础服务免费，缺点是：数据会存在不安全的风险，另外一个就是只能进行通用的简单分析，无法定制化埋点方案）&lt;br&gt;
此处只展开初级：在产品、服务转化关键点植入统计代码，据其独立ID确保数据采集不重复（如收藏按钮点击率）；&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;主要的埋点事件分类：&quot;&gt;&lt;strong&gt;主要的埋点事件分类：&lt;/strong&gt;&lt;/h2&gt;
&lt;h3 id=&quot;点击事件：&quot;&gt;&lt;strong&gt;点击事件：&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;点击事件，用户点击按钮即算点击事件，不管点击后有无结果；&lt;/p&gt;
&lt;h3 id=&quot;曝光事件：&quot;&gt;&lt;strong&gt;曝光事件：&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;成功打开一次页面记一次，刷新页面一次记一次，加载下一页新页，加载一次记一次。home键切换到后台再进入页面，曝光事件不记；&lt;/p&gt;
&lt;h3 id=&quot;页面停留时间事件：&quot;&gt;&lt;strong&gt;页面停留时间事件：&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;表示一个用户在X页面的停留时长记为停留时长。例如：小明9:00访问了X网站首页，此时分析工具则开始为小明这个访问者记录1个Session（会话）。接着9:01小明又浏览了另外一个页面列表页，然后离开了网站（离开网站可以是通过关闭浏览器，或在地址栏键入一个不同的网址，或是点击了你网站上链接到其他网站的链接……）为了简单，我们把这个过程当做一个Session。&lt;br&gt;
则最终小明在首页的页面停留时间：&lt;br&gt;
&lt;strong&gt;（Time on Page，简称Tp）Tp(首页) = 9:01 – 9:00 = 1 分钟&lt;/strong&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="当日所学" scheme="http://yunminitools.cn/categories/%E5%BD%93%E6%97%A5%E6%89%80%E5%AD%A6/"/>
    
    
    <category term="数据管理" scheme="http://yunminitools.cn/tags/%E6%95%B0%E6%8D%AE%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>推荐：学正则表达式的网站</title>
    <link href="http://yunminitools.cn/2023/03/31/Learn-Regular-expressions/"/>
    <id>http://yunminitools.cn/2023/03/31/Learn-Regular-expressions/</id>
    <published>2023-03-31T15:04:59.000Z</published>
    <updated>2023-03-31T15:05:50.401Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;推荐一个从零开始学正则表达式的网站，一步步，交互式，支持中文，方便学。非常不错的网站：&lt;a href=&quot;https://regexlearn.com/zh-cn&quot;&gt;regexlearn.com&lt;/a&gt;&lt;br&gt;
&lt;img</summary>
        
      
    
    
    
    <category term="有趣资源" scheme="http://yunminitools.cn/categories/%E6%9C%89%E8%B6%A3%E8%B5%84%E6%BA%90/"/>
    
    
    <category term="编程技巧" scheme="http://yunminitools.cn/tags/%E7%BC%96%E7%A8%8B%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>37signals的决策原则</title>
    <link href="http://yunminitools.cn/2023/03/30/37-how-we-make-decisions/"/>
    <id>http://yunminitools.cn/2023/03/30/37-how-we-make-decisions/</id>
    <published>2023-03-30T14:51:25.000Z</published>
    <updated>2023-03-31T14:52:16.181Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;背景&quot;&gt;背景&lt;/h2&gt;
&lt;p&gt;37signals 是一间芝加哥互联网应用公司，著名产品如 Basecamp，并以开发 Rails 框架著称。下面是他们公司公布的&lt;a href=&quot;https://37signals.com/how-we-make-decisions&quot;&gt;决策原则&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&quot;决策原则&quot;&gt;决策原则&lt;/h2&gt;
&lt;p&gt;以下是我们在37signals做决定时努力牢记的一些一般原则。它们不是要求，这也不是我们在面临选择时的全面清单，但它们可以作为我们在做每天都需要做的一件事时的框架、考虑和共同做法：决定。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;为什么我们要做这个决定，为什么要现在做这个决定? Why are we deciding anything at all? Does a decision actually need to be made here?&lt;/li&gt;
&lt;li&gt;是否是正确的人来做这个决定？谁是拥有正确信息、背景和洞察里的正确人选（不是角色）？谁只是在插嘴？ Is the right person making this decision? Not the right role, but the right person with the right information, context, and insight? Who’s merely chiming in?&lt;/li&gt;
&lt;li&gt;如果忽略眼前利益，我们一年以后还会对这个决定有什么感觉？ If we remove the immediate impact, how do we think we’ll feel about this decision a year from now?&lt;/li&gt;
&lt;li&gt;为什么还没有做出决定？为什么我们之前没有决定？ Why hasn’t this decision been made already? Why didn’t we decide before?&lt;/li&gt;
&lt;li&gt;为什么我们要花这么长时间做这个决定，我们在犹豫什么？这说明什么？ What’s taking so long to make this decision? Why are we hesitating? What does that reveal?&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="当日所学" scheme="http://yunminitools.cn/categories/%E5%BD%93%E6%97%A5%E6%89%80%E5%AD%A6/"/>
    
    
    <category term="复盘反思" scheme="http://yunminitools.cn/tags/%E5%A4%8D%E7%9B%98%E5%8F%8D%E6%80%9D/"/>
    
  </entry>
  
  <entry>
    <title>AI 论文速递</title>
    <link href="http://yunminitools.cn/2023/03/29/AI-articles/"/>
    <id>http://yunminitools.cn/2023/03/29/AI-articles/</id>
    <published>2023-03-29T14:55:00.000Z</published>
    <updated>2023-03-29T14:55:23.521Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;@RickYU写了个小项目 BriefGPT，抓取 Arxiv AI 领域论文，通过 GPT 生成中文标题和论文概要，高亮顶会论文，方便快速筛选。&lt;br&gt;
网站：&lt;a</summary>
        
      
    
    
    
    <category term="有趣资源" scheme="http://yunminitools.cn/categories/%E6%9C%89%E8%B6%A3%E8%B5%84%E6%BA%90/"/>
    
    
    <category term="人工智能" scheme="http://yunminitools.cn/tags/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/"/>
    
  </entry>
  
  <entry>
    <title>推荐：Prompts 收集网站</title>
    <link href="http://yunminitools.cn/2023/03/28/Prompts-Resource-1/"/>
    <id>http://yunminitools.cn/2023/03/28/Prompts-Resource-1/</id>
    <published>2023-03-28T15:47:56.000Z</published>
    <updated>2023-03-28T15:49:53.253Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;推荐一个我正在用的 Prompts 网站，&lt;a href=&quot;https://prompthero.com/&quot;&gt;https://prompthero.com/&lt;/a&gt; ，适用于 ChatGPT、Midjourney、Stable Diffusion，最近用</summary>
        
      
    
    
    
    <category term="有趣资源" scheme="http://yunminitools.cn/categories/%E6%9C%89%E8%B6%A3%E8%B5%84%E6%BA%90/"/>
    
    
    <category term="AIGC" scheme="http://yunminitools.cn/tags/AIGC/"/>
    
    <category term="绘画" scheme="http://yunminitools.cn/tags/%E7%BB%98%E7%94%BB/"/>
    
  </entry>
  
  <entry>
    <title>转载：《GPT-4 ，通用人工智能的火花》论文内容精选与翻译</title>
    <link href="http://yunminitools.cn/2023/03/27/Sparks-of-Artificial-General-Intelligence/"/>
    <id>http://yunminitools.cn/2023/03/27/Sparks-of-Artificial-General-Intelligence/</id>
    <published>2023-03-27T15:05:20.000Z</published>
    <updated>2023-03-27T15:06:22.713Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;引言：&quot;&gt;引言：&lt;/h2&gt;
&lt;p&gt;《通用人工智能的火花：GPT-4早期实验》是3月最重要的一篇论文，引起了广泛的关注和讨论，但是论文长达 154页，中文版本还无人翻译。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.notion.so/GPT-4-8fc50010291d47efb92cbbd668c8c893&quot;&gt;本文&lt;/a&gt;挑选了论文中的重点结论并进行翻译，虽然已经是精选，但仍然超过万字。但考虑到 GPT5 明年才能面世，这篇文章在今年什么时候看都不晚。&lt;/p&gt;
&lt;p&gt;微软的研究院在很早期就接触到了 GPT-4 的非多模态版本，并对齐进行了详尽的测试。这篇论文就是整个的测试过程和结论。不管是测试方法还是结论都非常精彩，强烈推荐看一遍，传送门在此 。&lt;a href=&quot;https://arxiv.org/pdf/2303.12712v1.pdf&quot;&gt;https://arxiv.org/pdf/2303.12712v1.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;本文的翻译没有添加任何夸张的修辞（DeepL和ChatGPT贡献也很大），但文中透露的信息本身已足够震撼。&lt;/p&gt;
&lt;p&gt;本文目的是和大家分享当前AI最新的进展，欢迎分享转发，如需转载，只需要注明作者信息 &lt;a href=&quot;https://web.okjike.com/u/FCEA29D3-5BB5-4174-B7A9-1DEE77CEDC46&quot;&gt;orange.ai&lt;/a&gt; 和原始链接 &lt;a href=&quot;https://www.notion.so/GPT-4-8fc50010291d47efb92cbbd668c8c893&quot;&gt;https://orangeblog.notion.site/GPT-4-8fc50010291d47efb92cbbd668c8c893&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="当日所学" scheme="http://yunminitools.cn/categories/%E5%BD%93%E6%97%A5%E6%89%80%E5%AD%A6/"/>
    
    
    <category term="人工智能" scheme="http://yunminitools.cn/tags/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/"/>
    
    <category term="论文翻译" scheme="http://yunminitools.cn/tags/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/"/>
    
  </entry>
  
  <entry>
    <title>概念地图介绍</title>
    <link href="http://yunminitools.cn/2023/03/26/Concept-map-1/"/>
    <id>http://yunminitools.cn/2023/03/26/Concept-map-1/</id>
    <published>2023-03-26T12:11:58.000Z</published>
    <updated>2023-03-26T12:20:22.329Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;什么是概念地图？&quot;&gt;什么是概念地图？&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://wiki.mbalib.com/w/index.php?title=%E7%BA%A6%E7%91%9F%E5%A4%AB%C2%B7D%C2%B7%E8%AF%BA%E7%93%A6%E5%85%8B&amp;amp;action=edit&quot;&gt;约瑟夫·D·诺瓦克&lt;/a&gt;（&lt;a href=&quot;https://wiki.mbalib.com/w/index.php?title=Joseph_D.Novak&amp;amp;action=edit&quot;&gt;Joseph D.Novak&lt;/a&gt;）于20世纪70年代，在康奈尔大学（Cornell University）发展出概念图绘制技巧。当时，Novak将这种技巧应用在科学教学上，做为一种增进理解的教学技术。Novak的设计是基于&lt;a href=&quot;https://wiki.mbalib.com/wiki/%E5%A4%A7%E5%8D%AB%C2%B7%E5%A5%A5%E8%8B%8F%E4%BC%AF%E5%B0%94&quot;&gt;大卫·奥苏伯尔&lt;/a&gt;（&lt;a href=&quot;https://wiki.mbalib.com/wiki/David_Ausubel&quot;&gt;David Ausubel&lt;/a&gt;）的同化理论（assimilation theory）。&lt;a href=&quot;https://wiki.mbalib.com/wiki/%E5%A5%A5%E8%8B%8F%E4%BC%AF%E5%B0%94&quot;&gt;奥苏伯尔&lt;/a&gt;根据建构式学习（constructivism learning）的观点，强调先前知识（prior knowledge）是学习新知识的基础框架（framework），并有不可取代的重要性。在Novak的著作《习得学习》（Learning to Learn）中，指出“&lt;a href=&quot;https://wiki.mbalib.com/wiki/%E6%9C%89%E6%84%8F%E4%B9%89%E7%9A%84%E5%AD%A6%E4%B9%A0&quot;&gt;有意义的学习&lt;/a&gt;，涉及将新概念与命题的同化于既有的认知架构中。”&lt;br&gt;
Novak教授认为，概念图是某个主题的概念及其关系的图形化表示，概念图是用来&lt;a href=&quot;https://wiki.mbalib.com/wiki/%E7%BB%84%E7%BB%87&quot;&gt;组织&lt;/a&gt;和表征知识的工具。它通常将某一主题的有关概念置于圆圈或方框之中，然后用连线将相关的概念和命题连接，连线上标明两个概念之间的意义关系。概念图又可称为概念构图（concept mapping）或概念地图（concept maps）。前者注重概念图制作的具体过程，后者注重概念图制作的最后结果。现在一般把概念构图和概念地图统称为概念图而不加于严格的区别。&lt;br&gt;
在概念图中，由方形表示概念，如“狗”和“动物”等等。概念间的关系则以标名(labelled)的箭头线段连结，箭头的方向表示往下发展的层次。这些线段会像是：“引发”、“导致”、“需要”、“提供”等等。&lt;/p&gt;
&lt;h2 id=&quot;概念图的组织结构&quot;&gt;概念图的组织结构&lt;/h2&gt;
&lt;p&gt;“概念图”是一种知识以及知识之间的关系的网络图形化表征，也是&lt;a href=&quot;https://wiki.mbalib.com/wiki/%E6%80%9D%E7%BB%B4%E5%8F%AF%E8%A7%86%E5%8C%96&quot;&gt;思维可视化&lt;/a&gt;的表征。一幅概念图一般由“节点”、“链接”和“有关文字标注”组成。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1、节点：&lt;/strong&gt; 由几何图形、图案、文字等表示某个概念，每个节点表示一个概念，一般同一层级的概念用同种的符号（图形）标识。概念是可以用于交流的指代明确的符号（词汇、语言等形式）。&lt;br&gt;
&lt;strong&gt;2、链接：&lt;/strong&gt; 表示不同节点间的有意义的关系，常用各种形式的线链接不同节点，这其中表达了构图者对概念的理解程度。&lt;br&gt;
&lt;strong&gt;3、文字标注：&lt;/strong&gt; 可以是表示不同节点上的概念的关系，也可以是对节点上的概念详细阐述，还可以是对整幅图的有关说明。&lt;/p&gt;
&lt;p&gt;举例：&lt;br&gt;
&lt;img src=&quot;http://cdn.yunminitools.cn/blog/0326-WhatIsCmap.jpeg&quot; alt=&quot;《什么是概念地图》&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;概念地图的优势&quot;&gt;概念地图的优势&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;层次结构明显&lt;/li&gt;
&lt;li&gt;长程连接更容易看到&lt;/li&gt;
&lt;li&gt;维基融合，主动性导航型知识库&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;举例：&lt;br&gt;
&lt;img src=&quot;http://cdn.yunminitools.cn/blog/0326-ReadABook.jpeg&quot; alt=&quot;《如何阅读一本书》&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="当日所学" scheme="http://yunminitools.cn/categories/%E5%BD%93%E6%97%A5%E6%89%80%E5%AD%A6/"/>
    
    
    <category term="工具框架" scheme="http://yunminitools.cn/tags/%E5%B7%A5%E5%85%B7%E6%A1%86%E6%9E%B6/"/>
    
  </entry>
  
  <entry>
    <title>思考问题的工具和框架</title>
    <link href="http://yunminitools.cn/2023/03/25/Tools-for-better-thinking/"/>
    <id>http://yunminitools.cn/2023/03/25/Tools-for-better-thinking/</id>
    <published>2023-03-25T02:33:05.000Z</published>
    <updated>2023-03-25T02:39:44.636Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;网站特点&quot;&gt;网站特点&lt;/h2&gt;
&lt;p&gt;发现一个帮助更好思考问题的工具「&lt;a href=&quot;https://untools.co/&quot;&gt;untools&lt;/a&gt;」，收集了各种思维工具和框架，可以帮助我们更好地理解问题、分析、决策，包括有常用的金字塔、鱼骨图、二阶思维等，类似于选择不同的思维模型来解决不同的问题。&lt;br&gt;
&lt;img src=&quot;http://cdn.yunminitools.cn/blog/0325-untools.png&quot; alt=&quot;https://untools.co/&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;网站结构&quot;&gt;网站结构&lt;/h2&gt;
&lt;h3 id=&quot;系统思考&quot;&gt;系统思考&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;概念地图（&lt;a href=&quot;https://untools.co/concept-map&quot;&gt;Concept map&lt;/a&gt;）: 形象地理解一个概念或系统，了解其实体之间的关系。&lt;/li&gt;
&lt;li&gt;连接圈（&lt;a href=&quot;https://untools.co/connection-circles&quot;&gt;Connection circles&lt;/a&gt;）:是一种将故事或系统中的关系可视化的工具。它们通过看到系统中的因果关系来帮助你理解复杂性。&lt;/li&gt;
&lt;li&gt;冰山模型(&lt;a href=&quot;https://untools.co/iceberg-model&quot;&gt;Iceberg Model&lt;/a&gt;):通过查看隐藏的抽象级别来发现事件的根本原因。&lt;/li&gt;
&lt;li&gt;平衡反馈回路(&lt;a href=&quot;https://untools.co/balancing-feedback-loop&quot;&gt;Balancing feedback loop&lt;/a&gt;):是一种机制，它抵制在一个方向的进一步变化。它以反方向的变化来对抗一个方向的变化。它试图稳定一个系统。&lt;/li&gt;
&lt;li&gt;强化反馈回路(&lt;a href=&quot;https://untools.co/reinforcing-feedback-loop&quot;&gt;Reinforcing feedback loop&lt;/a&gt;):了解指数（复利）变化背后的力量。&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="有趣资源" scheme="http://yunminitools.cn/categories/%E6%9C%89%E8%B6%A3%E8%B5%84%E6%BA%90/"/>
    
    
    <category term="工具框架" scheme="http://yunminitools.cn/tags/%E5%B7%A5%E5%85%B7%E6%A1%86%E6%9E%B6/"/>
    
  </entry>
  
  <entry>
    <title>中台的设计挑战-3</title>
    <link href="http://yunminitools.cn/2023/03/24/Design-Challenges-for-the-Middle-Platform-3/"/>
    <id>http://yunminitools.cn/2023/03/24/Design-Challenges-for-the-Middle-Platform-3/</id>
    <published>2023-03-24T15:10:15.000Z</published>
    <updated>2023-03-24T15:10:50.441Z</updated>
    
    
    <summary type="html">&lt;p&gt;在做中台设计的过程中，发现中台体系庞大，链路错综复杂，问题也很多。不过这些页面之间都存有一些共性，通过对页面特征的分析，总结出了三种典型的业务场景类型：信息列表类、规则配置类、场景联动类。&lt;/p&gt;
&lt;h2 id=&quot;3-场景联动类&quot;&gt;&lt;strong&gt;3. 场景联动类&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;在中台业务域中，有许多与C端紧密相关的场景，但我们似乎并未抓住这种适合互动的机会，前中后台之间缺乏沟通与联动。整个系统就像一座冰山，前台只是冰山一角，冰面之下隐藏着庞大的中台系统，这就形成了前后之间虽然关系紧密但彼此看不见的情况。&lt;br&gt;
&lt;img src=&quot;http://cdn.yunminitools.cn/blog/0322-Design-C1.png&quot; alt=&quot; &quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="当日所学" scheme="http://yunminitools.cn/categories/%E5%BD%93%E6%97%A5%E6%89%80%E5%AD%A6/"/>
    
    
    <category term="UI设计" scheme="http://yunminitools.cn/tags/UI%E8%AE%BE%E8%AE%A1/"/>
    
    <category term="产品管理" scheme="http://yunminitools.cn/tags/%E4%BA%A7%E5%93%81%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>中台的设计挑战-2</title>
    <link href="http://yunminitools.cn/2023/03/23/Design-Challenges-for-the-Middle-Platform-2/"/>
    <id>http://yunminitools.cn/2023/03/23/Design-Challenges-for-the-Middle-Platform-2/</id>
    <published>2023-03-23T14:53:36.000Z</published>
    <updated>2023-03-23T14:54:02.177Z</updated>
    
    
    <summary type="html">&lt;p&gt;在做中台设计的过程中，发现中台体系庞大，链路错综复杂，问题也很多。不过这些页面之间都存有一些共性，通过对页面特征的分析，总结出了三种典型的业务场景类型：信息列表类、规则配置类、场景联动类。&lt;/p&gt;
&lt;h2 id=&quot;2-规则配置类&quot;&gt;2. 规则配置类&lt;/h2&gt;
&lt;p&gt;规则配置类页面是中台业务域中另一种常见的场景，其特点是配置项繁多，且逻辑复杂。繁琐的配置加上复杂的逻辑无疑加重了用户的认知负荷，导致操作低效。&lt;br&gt;
复杂的规则让我们看不懂配置项背后的含义，这类现象统称为“看不懂”。针对该问题，我们意识到可以利用人眼对图形符号更为敏感这一特性，用图形符号代替文本描述，让抽象的概念和复杂的逻辑关系清晰可见，以此来降低理解门槛。&lt;br&gt;
为了更好的帮助我们理解图形符号映射法则，下面举个案例加以说明。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;案例  选品特征组合可视化&lt;/strong&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="当日所学" scheme="http://yunminitools.cn/categories/%E5%BD%93%E6%97%A5%E6%89%80%E5%AD%A6/"/>
    
    
    <category term="UI设计" scheme="http://yunminitools.cn/tags/UI%E8%AE%BE%E8%AE%A1/"/>
    
    <category term="产品管理" scheme="http://yunminitools.cn/tags/%E4%BA%A7%E5%93%81%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>中台的设计挑战-1</title>
    <link href="http://yunminitools.cn/2023/03/22/Design-Challenges-for-the-Middle-Platform-1/"/>
    <id>http://yunminitools.cn/2023/03/22/Design-Challenges-for-the-Middle-Platform-1/</id>
    <published>2023-03-22T14:37:31.000Z</published>
    <updated>2023-03-22T14:38:10.837Z</updated>
    
    
    <summary type="html">&lt;p&gt;在做中台设计的过程中，发现中台体系庞大，链路错综复杂，问题也很多。不过这些页面之间都存有一些共性，通过对页面特征的分析，总结出了三种典型的业务场景类型：信息列表类、规则配置类、场景联动类。&lt;/p&gt;
&lt;h2 id=&quot;1-信息列表类&quot;&gt;1.信息列表类&lt;/h2&gt;
&lt;p&gt;列表是中后台最为常见的场景之一，传统的列表无非是字段的堆叠，大量相似信息的重复出现，降低了有效信息的捕获和整合效率，加重了认知负荷。大量列表让我们有种看不清重点的错觉，这种现象统称为“看不清”，为了解决这个问题，我们将列表按照其功能分成两大类：&lt;strong&gt;执行类&lt;/strong&gt;和&lt;strong&gt;看板类&lt;/strong&gt;。执行类列表目的是将所有字段展示完全，方便统一管理和操作；看板类则只要展示关键信息，起到快速查看和监控的作用。&lt;/p&gt;
&lt;h3 id=&quot;1-1-执行类列表&quot;&gt;&lt;strong&gt;1.1 执行类列表&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;http://cdn.yunminitools.cn/blog/0322-Design-01.png&quot; alt=&quot; &quot;&gt;&lt;br&gt;
这里举一个营销列表的例子，营销列表的作用是对所有的活动进行一个高效的管理。&lt;/p&gt;</summary>
    
    
    
    <category term="当日所学" scheme="http://yunminitools.cn/categories/%E5%BD%93%E6%97%A5%E6%89%80%E5%AD%A6/"/>
    
    
    <category term="UI设计" scheme="http://yunminitools.cn/tags/UI%E8%AE%BE%E8%AE%A1/"/>
    
    <category term="产品管理" scheme="http://yunminitools.cn/tags/%E4%BA%A7%E5%93%81%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>关于linux vim命令替换的使用</title>
    <link href="http://yunminitools.cn/2023/03/21/VIM-Replace-Command/"/>
    <id>http://yunminitools.cn/2023/03/21/VIM-Replace-Command/</id>
    <published>2023-03-21T15:35:49.000Z</published>
    <updated>2023-03-21T15:36:21.910Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;vim 中可以使用 ：s 命令来替换字符串。以前只会使用一种格式来全文替换，今天发现该命令有很多种写法（linux vi命令真是强大啊，还有很多需要学习），记录几种在此，方便以后查询。&lt;/p&gt;
&lt;p&gt;：s/vivian/sky/ 替换当前行第一个 vivian 为</summary>
        
      
    
    
    
    <category term="日常练习" scheme="http://yunminitools.cn/categories/%E6%97%A5%E5%B8%B8%E7%BB%83%E4%B9%A0/"/>
    
    
    <category term="Linux" scheme="http://yunminitools.cn/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>聊聊企业服务产品</title>
    <link href="http://yunminitools.cn/2023/03/20/Talk-about-Enterprise-Services/"/>
    <id>http://yunminitools.cn/2023/03/20/Talk-about-Enterprise-Services/</id>
    <published>2023-03-20T15:11:50.000Z</published>
    <updated>2023-03-20T15:12:21.009Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;企业服务在解决什么问题？&quot;&gt;企业服务在解决什么问题？&lt;/h2&gt;
&lt;p&gt;按照亨利·法约尔的说法，无论哪种类型的企业，经营的过程中都会面临这6种活动：技术活动、财务活动、会计活动、商业活动、安全活动、管理活动。&lt;/p&gt;
&lt;p&gt;市场上主流的企业服务产品解决的问题分别是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Salesforce、纷享销客解决的是企业的商业活动，帮助企业把产品卖出去，或把产品（资源）买进来。&lt;/li&gt;
&lt;li&gt;金蝶、用友解决的是企业的会计活动，帮助企业把账记清楚，各项成本是多少、有多少负债与资产。&lt;/li&gt;
&lt;li&gt;Teambition解决的是企业的管理活动，帮助企业把事（项目）理清楚，提高团队协作效率。同样是解决管理活动，薪人薪事的不同点在于它解决的是人的问题，帮助企业把人员的管理变得更高效。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;即便了解了这个理论，在对市场规模进行预判的时候我们还是会犯错，因为企业发展的不同阶段，每个经营活动的侧重点是不一样的。以互联网公司为例：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;早期，想法要落地首先需要启动资金，于是企业发展的第一步就是准备BP融点钱，然后开始招聘，租办公场地，购买服务器等设备，所有人的精力都扑在产品上，公司最重要的资产就是产品和技术人员，这个阶段企业最关注的是财务活动和技术活动。&lt;/li&gt;
&lt;li&gt;产品打磨的差不多了，下一步准备开始推向市场了，于是要开始考虑哪些渠道推广更有效，涉及到付费的话还要考虑定价策略，因此这个阶段企业最关注的是商业活动，即把产品更好地『卖出去』&lt;/li&gt;
&lt;li&gt;一旦产品被市场证明是有效的话，企业会开始考虑规模化复制以便迎来更快的增长。而随着规模的扩大，不可避免会出现组织的『熵增』，于是大家开始关注如何提高企业运转的效率，哪些关键岗位需要更专业的人，哪个环节的效率可以优化。这个阶段企业最关注的是商业活动和管理活动。&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="当日所学" scheme="http://yunminitools.cn/categories/%E5%BD%93%E6%97%A5%E6%89%80%E5%AD%A6/"/>
    
    
    <category term="产品管理" scheme="http://yunminitools.cn/tags/%E4%BA%A7%E5%93%81%E7%AE%A1%E7%90%86/"/>
    
    <category term="企业服务" scheme="http://yunminitools.cn/tags/%E4%BC%81%E4%B8%9A%E6%9C%8D%E5%8A%A1/"/>
    
  </entry>
  
  <entry>
    <title>推荐网站资源：B端观止</title>
    <link href="http://yunminitools.cn/2023/03/19/B-design-resource/"/>
    <id>http://yunminitools.cn/2023/03/19/B-design-resource/</id>
    <published>2023-03-19T15:19:16.000Z</published>
    <updated>2023-03-19T15:19:48.369Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;介绍&quot;&gt;介绍&lt;/h2&gt;
&lt;p&gt;很久以前就注意到了这个网站：&lt;a</summary>
        
      
    
    
    
    <category term="有趣资源" scheme="http://yunminitools.cn/categories/%E6%9C%89%E8%B6%A3%E8%B5%84%E6%BA%90/"/>
    
    
    <category term="UI设计" scheme="http://yunminitools.cn/tags/UI%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>领域模型的应用</title>
    <link href="http://yunminitools.cn/2023/03/18/DDD-domain-model-1/"/>
    <id>http://yunminitools.cn/2023/03/18/DDD-domain-model-1/</id>
    <published>2023-03-18T14:05:23.000Z</published>
    <updated>2023-03-18T14:07:25.329Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;概述&quot;&gt;概述&lt;/h2&gt;
&lt;p&gt;领域驱动设计DDD在战术建模（后文简称建模，除非特别说明）上提供了一个元模型体系（如下图），通过这个元模型我们会对战略建模过程中识别出来的问题子域进行抽象，而通过抽象来指导最后的落地实现。&lt;br&gt;
&lt;img src=&quot;http://cdn.yunminitools.cn/blog/DDD-model.png&quot; alt=&quot;DDD构建的元模型元素脑图&quot;&gt;&lt;br&gt;
这里我们谈的战术阶段实际就是这样一个抽象过程。这个抽象过程由于元模型的存在实际是一定程度模式化的。这样的好处是并非只能技术人员参与建模，业务人员经过一定的培训也是完全可以理解的。在带领不少团队实践建模的过程中，业务人员参与战术设计也是我要求的。&lt;br&gt;
由于已经有不少书籍介绍DDD的元模型，这里我们就不再赘述，转而谈谈这个抽象过程中大家经常遇到的一些困惑。这些比较常见的问题可能是DDD元模型未来演进需要解决的，但我们仍然要注意业务问题和架构设计的多样性，不要过度规范，以至于过犹不及。&lt;/p&gt;</summary>
    
    
    
    <category term="当日所学" scheme="http://yunminitools.cn/categories/%E5%BD%93%E6%97%A5%E6%89%80%E5%AD%A6/"/>
    
    
    <category term="领域驱动" scheme="http://yunminitools.cn/tags/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8/"/>
    
  </entry>
  
  <entry>
    <title>如何实现系统解耦</title>
    <link href="http://yunminitools.cn/2023/03/17/How-to-system-decoupling/"/>
    <id>http://yunminitools.cn/2023/03/17/How-to-system-decoupling/</id>
    <published>2023-03-17T14:14:15.000Z</published>
    <updated>2023-03-17T14:18:07.506Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;为什么要解耦&quot;&gt;为什么要解耦&lt;/h2&gt;
&lt;p&gt;在软件开发领域，&lt;strong&gt;解耦&lt;/strong&gt;这个词相信大家都不陌生。在面向对象的语境下，我们会应用&lt;a href=&quot;https://insights.thoughtworks.cn/understand-solid-principles/&quot;&gt;SOLID原则&lt;/a&gt;来构建高内聚低耦合的应用，实现模块间的解耦；在复杂业务系统分析和建模时，会通过DDD的战略和战术设计帮助划分领域并实现分布式系统中服务的解耦；当我们在组织大型敏捷开发团队协同工作时，通过组建自治团队来减少摩擦，从而实现团队级别的解耦。&lt;/p&gt;
&lt;p&gt;可以看到解耦无处不在，并且以此为目的投入，大家都会觉得是无比的政治正确，因为实现了解耦，我们的系统和应用就能更快速的扩展和演进，我们的团队就能更顺畅的合作并能更加快速的实现业务价值。&lt;/p&gt;
&lt;p&gt;但是，当我们暂时抛开将得到的种种好处，思考要如何去实现它时，却发现解耦这个词表达的意义过于抽象和模糊，它既没有描述最终的状态也没有提供实现的方法。那当我们谈解耦的时候，具体内容是什么呢？&lt;/p&gt;
&lt;p&gt;从字面上理解的所谓耦合，通常是指&lt;strong&gt;两个或两个以上的物体或者体系之间相互作用彼此影响&lt;/strong&gt;，对应到软件研发的以上场景，我们可以转换成是指&lt;strong&gt;两个或两个以上的模块/系统/团队之间相互作用彼此影响&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;在软件需要解决的业务问题越来复杂的今天，单个的系统或者团队很难在不依赖外部的情况下去实现业务目标，所以我理解的&lt;strong&gt;解耦&lt;/strong&gt;并不是要消除耦合(彼此的作用和影响/依赖)，而是指我们应该如何通过一定的方式和规则，来设计和管理以上提到的多个元素之间的依赖，降低耦合程度来使整个系统有序顺畅的运转。&lt;/p&gt;
&lt;p&gt;本文将从服务间上下游的思维来讨论如何在系统架构演进过程中，持续的保持服务间的松耦合，实现解耦的目标。&lt;/p&gt;</summary>
    
    
    
    <category term="当日所学" scheme="http://yunminitools.cn/categories/%E5%BD%93%E6%97%A5%E6%89%80%E5%AD%A6/"/>
    
    
    <category term="领域驱动" scheme="http://yunminitools.cn/tags/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8/"/>
    
  </entry>
  
</feed>
