<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>New structure for utility</title>
  
  
  <link href="http://yunminitools.cn/atom.xml" rel="self"/>
  
  <link href="http://yunminitools.cn/"/>
  <updated>2024-03-24T09:33:25.336Z</updated>
  <id>http://yunminitools.cn/</id>
  
  <author>
    <name>Richard Z.</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>查看Linux用户登录日志</title>
    <link href="http://yunminitools.cn/2024/03/24/linux-user-login-review/"/>
    <id>http://yunminitools.cn/2024/03/24/linux-user-login-review/</id>
    <published>2024-03-24T09:32:49.000Z</published>
    <updated>2024-03-24T09:33:25.336Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;1-lastlog&quot;&gt;1. lastlog&lt;/h2&gt;
&lt;p&gt;使用&lt;strong&gt;lastlog&lt;/strong&gt;可以查看所有用户最近登录的信息：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td</summary>
        
      
    
    
    
    <category term="当日所学" scheme="http://yunminitools.cn/categories/%E5%BD%93%E6%97%A5%E6%89%80%E5%AD%A6/"/>
    
    
    <category term="Linux" scheme="http://yunminitools.cn/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Data Warehouse Construction Standards - Data Modeling Standards</title>
    <link href="http://yunminitools.cn/2024/03/22/Data-Warehouse-Construction-Standards-4/"/>
    <id>http://yunminitools.cn/2024/03/22/Data-Warehouse-Construction-Standards-4/</id>
    <published>2024-03-22T14:32:42.000Z</published>
    <updated>2024-03-22T14:33:27.645Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;3-1-Data-Modeling-Standards&quot;&gt;3.1 Data Modeling Standards&lt;/h2&gt;
&lt;h3 id=&quot;a-Horizontal-Layering&quot;&gt;a. Horizontal Layering:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Explanation&lt;/p&gt;
&lt;p&gt;Our layered design approach is an essential byproduct of our data architecture strategy, adhering to &lt;strong&gt;strict standards&lt;/strong&gt; during the modeling phase for optimal results.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Layer Standards&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The Operational Data Store (ODS)
&lt;ul&gt;
&lt;li&gt;Design Methodology:
&lt;ul&gt;
&lt;li&gt;Store raw data with minimal processing in the data warehouse system, maintaining a structure that is similar to the source system.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Main Functions:
&lt;ul&gt;
&lt;li&gt;Synchronize and store foundational data in the data warehouse to address data silo issues and ensure the integrity of data integration .&lt;/li&gt;
&lt;li&gt;To ensure data persistence, keeping tables and data in perfect sync.&lt;/li&gt;
&lt;li&gt;Perform regular synchronization and add synchronization timestamps to the tables to capture their temporal variability.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Data Processing:
&lt;ul&gt;
&lt;li&gt;Handling of anomalies and erroneous data.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Naming Convention:
&lt;ul&gt;
&lt;li&gt;Layer abbreviation_Source System_Source System Table Name&lt;/li&gt;
&lt;li&gt;Example: ods_oms_order&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="当日所学" scheme="http://yunminitools.cn/categories/%E5%BD%93%E6%97%A5%E6%89%80%E5%AD%A6/"/>
    
    
    <category term="数据管理" scheme="http://yunminitools.cn/tags/%E6%95%B0%E6%8D%AE%E7%AE%A1%E7%90%86/"/>
    
    <category term="English_Article" scheme="http://yunminitools.cn/tags/English-Article/"/>
    
  </entry>
  
  <entry>
    <title>Data Warehouse Construction Standards - What</title>
    <link href="http://yunminitools.cn/2024/03/22/Data-Warehouse-Construction-Standards-3/"/>
    <id>http://yunminitools.cn/2024/03/22/Data-Warehouse-Construction-Standards-3/</id>
    <published>2024-03-22T14:32:02.000Z</published>
    <updated>2024-03-22T14:32:35.013Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;3-What-are-the-key-components-of-data-warehouse-standards&quot;&gt;3.What are the key components of data warehouse standards?&lt;/h2&gt;
&lt;h3</summary>
        
      
    
    
    
    <category term="当日所学" scheme="http://yunminitools.cn/categories/%E5%BD%93%E6%97%A5%E6%89%80%E5%AD%A6/"/>
    
    
    <category term="数据管理" scheme="http://yunminitools.cn/tags/%E6%95%B0%E6%8D%AE%E7%AE%A1%E7%90%86/"/>
    
    <category term="English_Article" scheme="http://yunminitools.cn/tags/English-Article/"/>
    
  </entry>
  
  <entry>
    <title>Data Warehouse Construction Standards - How</title>
    <link href="http://yunminitools.cn/2024/03/20/Data-Warehouse-Construction-Standards-2/"/>
    <id>http://yunminitools.cn/2024/03/20/Data-Warehouse-Construction-Standards-2/</id>
    <published>2024-03-20T13:08:45.000Z</published>
    <updated>2024-03-20T13:09:19.493Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;2-How-To-Implement-Data-Warehouse-Standards&quot;&gt;2.How To Implement Data Warehouse Standards&lt;/h2&gt;
&lt;h3 id=&quot;a-Standard-formulation&quot;&gt;a.</summary>
        
      
    
    
    
    <category term="当日所学" scheme="http://yunminitools.cn/categories/%E5%BD%93%E6%97%A5%E6%89%80%E5%AD%A6/"/>
    
    
    <category term="数据管理" scheme="http://yunminitools.cn/tags/%E6%95%B0%E6%8D%AE%E7%AE%A1%E7%90%86/"/>
    
    <category term="English_Article" scheme="http://yunminitools.cn/tags/English-Article/"/>
    
  </entry>
  
  <entry>
    <title>Data Warehouse Construction Standards - Why</title>
    <link href="http://yunminitools.cn/2024/03/20/Data-Warehouse-Construction-Standards-1/"/>
    <id>http://yunminitools.cn/2024/03/20/Data-Warehouse-Construction-Standards-1/</id>
    <published>2024-03-20T13:05:51.000Z</published>
    <updated>2024-03-20T13:06:22.481Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;1-Why-We-Need-Data-Warehouse-Standards&quot;&gt;1. Why We Need Data Warehouse Standards&lt;/h2&gt;
&lt;p&gt;The adage “No rules, no success”</summary>
        
      
    
    
    
    <category term="当日所学" scheme="http://yunminitools.cn/categories/%E5%BD%93%E6%97%A5%E6%89%80%E5%AD%A6/"/>
    
    
    <category term="数据管理" scheme="http://yunminitools.cn/tags/%E6%95%B0%E6%8D%AE%E7%AE%A1%E7%90%86/"/>
    
    <category term="English_Article" scheme="http://yunminitools.cn/tags/English-Article/"/>
    
  </entry>
  
  <entry>
    <title>有用的学习英语插件-1</title>
    <link href="http://yunminitools.cn/2024/03/18/usefule-chrome-plugin-1/"/>
    <id>http://yunminitools.cn/2024/03/18/usefule-chrome-plugin-1/</id>
    <published>2024-03-18T13:15:03.000Z</published>
    <updated>2024-03-18T13:16:56.761Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;语言反应器（Language-Reactor）&quot;&gt;语言反应器（Language Reactor）&lt;/h2&gt;
&lt;p&gt;非常强大，可以提取Youtube字幕，翻译，如图：&lt;/p&gt;
&lt;p&gt;&lt;img</summary>
        
      
    
    
    
    <category term="有趣资源" scheme="http://yunminitools.cn/categories/%E6%9C%89%E8%B6%A3%E8%B5%84%E6%BA%90/"/>
    
    
    <category term="英语学习" scheme="http://yunminitools.cn/tags/%E8%8B%B1%E8%AF%AD%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="Chrom插件" scheme="http://yunminitools.cn/tags/Chrom%E6%8F%92%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>在Docker环境下部署 Kibana 可视化工具 (从零到一搭建ELK日志)</title>
    <link href="http://yunminitools.cn/2024/03/16/install-elk-kibana-docker/"/>
    <id>http://yunminitools.cn/2024/03/16/install-elk-kibana-docker/</id>
    <published>2024-03-16T12:00:53.000Z</published>
    <updated>2024-03-16T12:02:44.989Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;什么是-Kibana？&quot;&gt;什么是</summary>
        
      
    
    
    
    <category term="日常练习" scheme="http://yunminitools.cn/categories/%E6%97%A5%E5%B8%B8%E7%BB%83%E4%B9%A0/"/>
    
    
    <category term="Linux" scheme="http://yunminitools.cn/tags/Linux/"/>
    
    <category term="ELK" scheme="http://yunminitools.cn/tags/ELK/"/>
    
  </entry>
  
  <entry>
    <title>安装 Python 虚拟环境（venv）</title>
    <link href="http://yunminitools.cn/2024/03/08/python-install-venv/"/>
    <id>http://yunminitools.cn/2024/03/08/python-install-venv/</id>
    <published>2024-03-08T11:44:38.000Z</published>
    <updated>2024-03-08T11:45:26.589Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;背景&quot;&gt;背景&lt;/h2&gt;
&lt;p&gt;Python有很多虚拟环境解决方案，今天介绍一个Python自带的解决方案。&lt;/p&gt;
&lt;h2 id=&quot;venv-模块&quot;&gt;venv 模块&lt;/h2&gt;
&lt;p&gt;Python3.3 之后，可以用模块 venv 代替 virtualenv</summary>
        
      
    
    
    
    <category term="当日所学" scheme="http://yunminitools.cn/categories/%E5%BD%93%E6%97%A5%E6%89%80%E5%AD%A6/"/>
    
    
    <category term="Python" scheme="http://yunminitools.cn/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>ElasticSearch入门篇-操作1</title>
    <link href="http://yunminitools.cn/2024/03/07/elasticseach-operation-1/"/>
    <id>http://yunminitools.cn/2024/03/07/elasticseach-operation-1/</id>
    <published>2024-03-07T13:44:55.000Z</published>
    <updated>2024-03-07T13:45:53.057Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;背景&quot;&gt;背景&lt;/h2&gt;
&lt;p&gt;如果一切正常，Elastic 就会在默认的9200端口运行。这时，打开另一个命令行窗口，请求该端口，会得到说明信息。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ curl localhost:9200&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&amp;quot;name&amp;quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&amp;quot;10eaed25cea5&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&amp;quot;cluster_name&amp;quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&amp;quot;my-es&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&amp;quot;cluster_uuid&amp;quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&amp;quot;dk5aq0evTjaXc2LEHIGtsA&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&amp;quot;version&amp;quot;&lt;/span&gt; : &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&amp;quot;number&amp;quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&amp;quot;7.7.1&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&amp;quot;build_flavor&amp;quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&amp;quot;default&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&amp;quot;build_type&amp;quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&amp;quot;docker&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&amp;quot;build_hash&amp;quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&amp;quot;ad56dce891c901a492bb1ee393f12dfff473a423&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&amp;quot;build_date&amp;quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&amp;quot;2020-05-28T16:30:01.040088Z&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&amp;quot;build_snapshot&amp;quot;&lt;/span&gt; : &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&amp;quot;lucene_version&amp;quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&amp;quot;8.5.1&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&amp;quot;minimum_wire_compatibility_version&amp;quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&amp;quot;6.8.0&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&amp;quot;minimum_index_compatibility_version&amp;quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&amp;quot;6.0.0-beta1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&amp;quot;tagline&amp;quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&amp;quot;You Know, for Search&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;基本概念&quot;&gt;基本概念&lt;/h2&gt;
&lt;h3 id=&quot;Node-与-Cluster&quot;&gt;Node 与 Cluster&lt;/h3&gt;
&lt;p&gt;Elastic 本质上是一个分布式数据库，允许多台服务器协同工作，每台服务器可以运行多个 Elastic 实例。&lt;/p&gt;
&lt;p&gt;单个 Elastic 实例称为一个节点（node）。一组节点构成一个集群（cluster）。&lt;/p&gt;
&lt;h3 id=&quot;Index&quot;&gt;&lt;strong&gt;Index&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;Elastic 会索引所有字段，经过处理后写入一个反向索引（Inverted Index）。查找数据的时候，直接查找该索引。&lt;/p&gt;
&lt;p&gt;所以，Elastic 数据管理的顶层单位就叫做 Index（索引）。它是单个数据库的同义词。每个 Index （即数据库）的名字必须是小写。&lt;/p&gt;
&lt;p&gt;下面的命令可以查看当前节点的所有 Index。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ curl -X GET &lt;span class=&quot;string&quot;&gt;&amp;#x27;http://localhost:9200/_cat/indices?v&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;显示下面的结果：&lt;br&gt;
&lt;img src=&quot;https://cdn.yunminitools.cn/blog/0307_es_index.png&quot; alt=&quot; &quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="日常练习" scheme="http://yunminitools.cn/categories/%E6%97%A5%E5%B8%B8%E7%BB%83%E4%B9%A0/"/>
    
    
    <category term="Linux" scheme="http://yunminitools.cn/tags/Linux/"/>
    
    <category term="ELK" scheme="http://yunminitools.cn/tags/ELK/"/>
    
  </entry>
  
  <entry>
    <title>在Docker环境下部署 Elasticsearch 数据库(从零到一搭建ELK日志)</title>
    <link href="http://yunminitools.cn/2024/03/07/install-elk-elasticseach-docker/"/>
    <id>http://yunminitools.cn/2024/03/07/install-elk-elasticseach-docker/</id>
    <published>2024-03-07T13:13:20.000Z</published>
    <updated>2024-03-07T13:14:24.897Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;背景&quot;&gt;背景&lt;/h2&gt;
&lt;p&gt;最近在玩 ELK 日志平台，它是 Elastic</summary>
        
      
    
    
    
    <category term="日常练习" scheme="http://yunminitools.cn/categories/%E6%97%A5%E5%B8%B8%E7%BB%83%E4%B9%A0/"/>
    
    
    <category term="Linux" scheme="http://yunminitools.cn/tags/Linux/"/>
    
    <category term="ELK" scheme="http://yunminitools.cn/tags/ELK/"/>
    
  </entry>
  
  <entry>
    <title>Python的列表，字典，元组，集合的区别和各自使用方法</title>
    <link href="http://yunminitools.cn/2024/02/27/difference-of-list-tuple-set-dict/"/>
    <id>http://yunminitools.cn/2024/02/27/difference-of-list-tuple-set-dict/</id>
    <published>2024-02-27T15:10:04.000Z</published>
    <updated>2024-02-27T15:10:44.632Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;背景&quot;&gt;背景&lt;/h2&gt;
&lt;p&gt;我在学习Python的时候，经常把 几个数据类型搞混，下面就对 list，tuple，set，dict总结区别：&lt;br&gt;
&lt;img src=&quot;https://cdn.yunminitools.cn/blog/0227_diff.png&quot; alt=&quot; &quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;1-列表list&quot;&gt;1.列表list []&lt;/h2&gt;
&lt;p&gt;列表是处理一组有序的数据结构，可以读写，添加和删除，或者搜索列表里的元素。因为可以添加和删除，所以称为可变的数据类型，即这种类型是可以被改变的，并且列表可以嵌套。&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;res = [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&amp;#x27;yihang&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#增加元素：extend和append&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;res.append(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;res.extend(&lt;span class=&quot;string&quot;&gt;&amp;#x27;6&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#删除元素：del，pop，切片，remove&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;del&lt;/span&gt; res[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;res.pop(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;#删除该位置上的元素，没有指定则是最后一个元素&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;res = res[:&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;]+res[&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;:]&lt;span class=&quot;comment&quot;&gt;#切片&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;res.remove(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;#删除指定值的元素&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#更改元素&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;res[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;] = &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;#&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#查元素&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(res[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(res[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;注意：如果想添加的一个元素是一个列表，那么append是将这个这个列表作为一个元素添加进来，而extend是将列中的元素一个一个添加进去&lt;/p&gt;</summary>
    
    
    
    <category term="当日所学" scheme="http://yunminitools.cn/categories/%E5%BD%93%E6%97%A5%E6%89%80%E5%AD%A6/"/>
    
    
    <category term="Python" scheme="http://yunminitools.cn/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>算法练习：BM2 链表内指定区间反转</title>
    <link href="http://yunminitools.cn/2024/02/26/nowcoder-algorithm-test-bm2/"/>
    <id>http://yunminitools.cn/2024/02/26/nowcoder-algorithm-test-bm2/</id>
    <published>2024-02-26T14:09:45.000Z</published>
    <updated>2024-02-26T14:17:12.049Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;问题描述&quot;&gt;问题描述&lt;/h2&gt;
&lt;p&gt;将一个节点数为 size 链表 m 位置到 n 位置之间的区间反转，要求时间复杂度&lt;em&gt;O&lt;/em&gt;(&lt;em&gt;n&lt;/em&gt;)，空间复杂度&lt;em&gt;O&lt;/em&gt;(1)。例如：给出的链表为 1→2→3→4→5→&lt;em&gt;NULL&lt;/em&gt;, m=2,&lt;em&gt;n&lt;/em&gt;=4,返回 1→4→3→2→5→&lt;em&gt;NULL&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;数据范围： 链表长度 0&amp;lt;&lt;em&gt;size&lt;/em&gt;≤10000，0&amp;lt;&lt;em&gt;m&lt;/em&gt;≤&lt;em&gt;n&lt;/em&gt;≤&lt;em&gt;size&lt;/em&gt;，链表中每个节点的值满足 &lt;em&gt;val&lt;/em&gt;∣≤10000&lt;/p&gt;
&lt;p&gt;要求：时间复杂度 &lt;em&gt;O&lt;/em&gt;(&lt;em&gt;n&lt;/em&gt;) ，空间复杂度 &lt;em&gt;O&lt;/em&gt;(&lt;em&gt;n&lt;/em&gt;)&lt;/p&gt;
&lt;p&gt;进阶：时间复杂度&lt;em&gt;O&lt;/em&gt;(&lt;em&gt;n&lt;/em&gt;)，空间复杂度&lt;em&gt;O&lt;/em&gt;(1)&lt;/p&gt;
&lt;h2 id=&quot;示例1&quot;&gt;示例1&lt;/h2&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;输入：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;1,2,3,4,5&amp;#125;,2,4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;返回值：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;1,4,3,2,5&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;示例2&quot;&gt;示例2&lt;/h2&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;输入：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;5&amp;#125;,1,1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;返回值：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;5&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="日常练习" scheme="http://yunminitools.cn/categories/%E6%97%A5%E5%B8%B8%E7%BB%83%E4%B9%A0/"/>
    
    
    <category term="编程技巧" scheme="http://yunminitools.cn/tags/%E7%BC%96%E7%A8%8B%E6%8A%80%E5%B7%A7/"/>
    
    <category term="Python" scheme="http://yunminitools.cn/tags/Python/"/>
    
    <category term="算法" scheme="http://yunminitools.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Window上用包管理应用安装软件 — Chocolatey</title>
    <link href="http://yunminitools.cn/2024/02/26/windows-package-management-chocolatey/"/>
    <id>http://yunminitools.cn/2024/02/26/windows-package-management-chocolatey/</id>
    <published>2024-02-26T13:32:55.000Z</published>
    <updated>2024-03-07T13:09:06.401Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;前言&lt;/h2&gt;
&lt;p&gt;在经历了多次重装系统、重新安装各种常用软件后，我突然萌生了一个想法，难道 Window 就没有一个像 Linux 一样可以使用一行命令安装软件的包管理器吗？&lt;/p&gt;
&lt;p&gt;答案是：有的。&lt;/p&gt;
&lt;p&gt;这里主要是介绍</summary>
        
      
    
    
    
    <category term="有趣资源" scheme="http://yunminitools.cn/categories/%E6%9C%89%E8%B6%A3%E8%B5%84%E6%BA%90/"/>
    
    
    <category term="Windows" scheme="http://yunminitools.cn/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>查看和清理Linux日志文件</title>
    <link href="http://yunminitools.cn/2024/02/21/linux-commands-collection-1/"/>
    <id>http://yunminitools.cn/2024/02/21/linux-commands-collection-1/</id>
    <published>2024-02-21T14:15:10.000Z</published>
    <updated>2024-02-21T14:18:01.880Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;1、查看目录大小&quot;&gt;&lt;strong&gt;1、查看目录大小&lt;/strong&gt;&lt;/h2&gt;
&lt;h3 id=&quot;du，下面命令显示当前文件夹下各个文件及文件夹大小（汇总）&quot;&gt;du，下面命令显示当前文件夹下各个文件及文件夹大小（汇总）&lt;/h3&gt;
&lt;figure</summary>
        
      
    
    
    
    <category term="有趣资源" scheme="http://yunminitools.cn/categories/%E6%9C%89%E8%B6%A3%E8%B5%84%E6%BA%90/"/>
    
    
    <category term="Linux" scheme="http://yunminitools.cn/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>docker安装MySQL主从复制</title>
    <link href="http://yunminitools.cn/2024/02/21/master-slave-replication-docker-install/"/>
    <id>http://yunminitools.cn/2024/02/21/master-slave-replication-docker-install/</id>
    <published>2024-02-21T14:12:19.000Z</published>
    <updated>2024-02-26T14:15:51.869Z</updated>
    
    
    <summary type="html">&lt;p&gt;以下是步骤：&lt;/p&gt;
&lt;h2 id=&quot;1-拉取MySQL的镜像&quot;&gt;&lt;strong&gt;1.拉取MySQL的镜像&lt;/strong&gt;&lt;/h2&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo docker pull mysql:8.0.25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;2-新建MySQL主服务器的容器实例，端口为3307&quot;&gt;2.新建MySQL主服务器的容器实例，端口为3307&lt;/h2&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo docker run -p 3501:3306 --name mysql-master \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-v /mnt/n1/data/mysql-master/log:/var/log/mysql \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-v /mnt/n1/data/mysql-master/data:/var/lib/mysql \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-v /mnt/n1/data/mysql-master/conf:/etc/mysql \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-v /mnt/n1/data/mysql-master/mysql-files:/var/lib/mysql-files \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-e MYSQL_ROOT_PASSWORD=123456 \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-d mysql:8.0.25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;命令解读：&lt;br&gt;
docker run ：创建并运行一个容器&lt;br&gt;
–name : 给容器起一个名字，比如叫做 mysql-master&lt;br&gt;
-p ：将宿主机端口与容器端口映射，冒号左侧是宿主机端口，右侧是容器端口&lt;br&gt;
-d：后台运行容器&lt;br&gt;
-e：环境变量，如密码什么的&lt;br&gt;
-v：挂载一个数据卷到某个容器内目录，上面分别配置了日志、数据、配置的数据卷&lt;/p&gt;</summary>
    
    
    
    <category term="日常练习" scheme="http://yunminitools.cn/categories/%E6%97%A5%E5%B8%B8%E7%BB%83%E4%B9%A0/"/>
    
    
    <category term="Docker" scheme="http://yunminitools.cn/tags/Docker/"/>
    
    <category term="Linux" scheme="http://yunminitools.cn/tags/Linux/"/>
    
    <category term="Mysql" scheme="http://yunminitools.cn/tags/Mysql/"/>
    
  </entry>
  
  <entry>
    <title>Windows命令-域内信息收集</title>
    <link href="http://yunminitools.cn/2024/02/20/windows-domain-commands-collection-1/"/>
    <id>http://yunminitools.cn/2024/02/20/windows-domain-commands-collection-1/</id>
    <published>2024-02-20T14:03:02.000Z</published>
    <updated>2024-02-20T14:03:49.301Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;判断是否存在域&quot;&gt;判断是否存在域&lt;/h2&gt;
&lt;h3 id=&quot;ipconfig&quot;&gt;ipconfig&lt;/h3&gt;
&lt;p&gt;查看网关 IP 地址、DNS 的 IP 地址、域名、本机是否和 DNS 服务器处于同一网段。&lt;/p&gt;
&lt;figure</summary>
        
      
    
    
    
    <category term="有趣资源" scheme="http://yunminitools.cn/categories/%E6%9C%89%E8%B6%A3%E8%B5%84%E6%BA%90/"/>
    
    
    <category term="Windows" scheme="http://yunminitools.cn/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>Mac brew安装tmux报错“no bottle available!“</title>
    <link href="http://yunminitools.cn/2024/02/18/mac-brew-install-tmux-error/"/>
    <id>http://yunminitools.cn/2024/02/18/mac-brew-install-tmux-error/</id>
    <published>2024-02-18T14:14:03.000Z</published>
    <updated>2024-02-18T14:17:51.073Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;问题&quot;&gt;问题&lt;/h2&gt;
&lt;p&gt;在Mac M1安装tmux时，老是报错，根据报错提示无法解决。&lt;/p&gt;
&lt;h2 id=&quot;解决方案&quot;&gt;解决方案&lt;/h2&gt;
&lt;p&gt;执行以下命令，再安装就可以了。&lt;/p&gt;
&lt;figure class=&quot;highlight</summary>
        
      
    
    
    
    <category term="日常练习" scheme="http://yunminitools.cn/categories/%E6%97%A5%E5%B8%B8%E7%BB%83%E4%B9%A0/"/>
    
    
    <category term="Mac" scheme="http://yunminitools.cn/tags/Mac/"/>
    
  </entry>
  
  <entry>
    <title>一次Docker应用排查过程</title>
    <link href="http://yunminitools.cn/2024/02/18/docker-debug-test-1/"/>
    <id>http://yunminitools.cn/2024/02/18/docker-debug-test-1/</id>
    <published>2024-02-18T14:11:46.000Z</published>
    <updated>2024-02-18T14:12:31.709Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;背景&quot;&gt;背景&lt;/h2&gt;
&lt;p&gt;重新发布了一个应用，发现无法访问，把排查过程记录一下。&lt;/p&gt;
&lt;h2 id=&quot;检查docker程序和开放端口&quot;&gt;检查docker程序和开放端口&lt;/h2&gt;
&lt;p&gt;运行下面语句：&lt;/p&gt;
&lt;figure</summary>
        
      
    
    
    
    <category term="日常练习" scheme="http://yunminitools.cn/categories/%E6%97%A5%E5%B8%B8%E7%BB%83%E4%B9%A0/"/>
    
    
    <category term="Docker" scheme="http://yunminitools.cn/tags/Docker/"/>
    
    <category term="Linux" scheme="http://yunminitools.cn/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Django 的日志机制-4</title>
    <link href="http://yunminitools.cn/2024/02/16/Django-Logging-4/"/>
    <id>http://yunminitools.cn/2024/02/16/Django-Logging-4/</id>
    <published>2024-02-16T12:19:13.000Z</published>
    <updated>2024-02-16T12:48:17.053Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;进阶&quot;&gt;进阶&lt;/h2&gt;
&lt;p&gt;其实，如果只是为了排错方便，记录一些日志，自定义类基本可以满足要求。但如果要记录访问系统的所有请求日志，那就无能为力了，因为不可能手动在每个接口代码加日志，也没必要。&lt;/p&gt;
&lt;p&gt;这个时候，很自然就能想到 Django 中间件了。&lt;/p&gt;
&lt;h2 id=&quot;Django-中间件&quot;&gt;Django 中间件&lt;/h2&gt;
&lt;p&gt;定义中间件类，包括  &lt;strong&gt;&lt;code&gt;Filters&lt;/code&gt;&lt;/strong&gt; 代码和 &lt;strong&gt;&lt;code&gt;middleware&lt;/code&gt;&lt;/strong&gt; 代码，在本地app文件夹中创建目录：&lt;code&gt;middlewares&lt;/code&gt;，目录下创建文件 &lt;code&gt;LogMiddleware.py&lt;/code&gt; :&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; django.utils.deprecation &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; MiddlewareMixin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; threading&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; logging&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; json&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; socket&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;local = threading.local()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title class_&quot;&gt;RequestLogFilter&lt;/span&gt;(logging.Filter):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;    日志过滤器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title function_&quot;&gt;filter&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;self, record&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        record.sip = &lt;span class=&quot;built_in&quot;&gt;getattr&lt;/span&gt;(local, &lt;span class=&quot;string&quot;&gt;&amp;#x27;sip&amp;#x27;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;#x27;none&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        record.dip = &lt;span class=&quot;built_in&quot;&gt;getattr&lt;/span&gt;(local, &lt;span class=&quot;string&quot;&gt;&amp;#x27;dip&amp;#x27;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;#x27;none&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        record.body = &lt;span class=&quot;built_in&quot;&gt;getattr&lt;/span&gt;(local, &lt;span class=&quot;string&quot;&gt;&amp;#x27;body&amp;#x27;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;#x27;none&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        record.path = &lt;span class=&quot;built_in&quot;&gt;getattr&lt;/span&gt;(local, &lt;span class=&quot;string&quot;&gt;&amp;#x27;path&amp;#x27;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;#x27;none&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        record.method = &lt;span class=&quot;built_in&quot;&gt;getattr&lt;/span&gt;(local, &lt;span class=&quot;string&quot;&gt;&amp;#x27;method&amp;#x27;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;#x27;none&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        record.username = &lt;span class=&quot;built_in&quot;&gt;getattr&lt;/span&gt;(local, &lt;span class=&quot;string&quot;&gt;&amp;#x27;username&amp;#x27;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;#x27;none&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        record.status_code = &lt;span class=&quot;built_in&quot;&gt;getattr&lt;/span&gt;(local, &lt;span class=&quot;string&quot;&gt;&amp;#x27;status_code&amp;#x27;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;#x27;none&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        record.reason_phrase = &lt;span class=&quot;built_in&quot;&gt;getattr&lt;/span&gt;(local, &lt;span class=&quot;string&quot;&gt;&amp;#x27;reason_phrase&amp;#x27;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;#x27;none&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;True&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title class_&quot;&gt;RequestLogMiddleware&lt;/span&gt;(&lt;span class=&quot;title class_ inherited__&quot;&gt;MiddlewareMixin&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;    将request的信息记录在当前的请求线程上。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title function_&quot;&gt;__init__&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;self, get_response=&lt;span class=&quot;literal&quot;&gt;None&lt;/span&gt;&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.get_response = get_response&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.apiLogger = logging.getLogger(&lt;span class=&quot;string&quot;&gt;&amp;#x27;web.log&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title function_&quot;&gt;__call__&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;self, request&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            body = json.loads(request.body)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;except&lt;/span&gt; Exception:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            body = &lt;span class=&quot;built_in&quot;&gt;dict&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; request.method == &lt;span class=&quot;string&quot;&gt;&amp;#x27;GET&amp;#x27;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            body.update(&lt;span class=&quot;built_in&quot;&gt;dict&lt;/span&gt;(request.GET))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            body.update(&lt;span class=&quot;built_in&quot;&gt;dict&lt;/span&gt;(request.POST))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        local.body = body&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        local.path = request.path&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        local.method = request.method&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        local.username = request.user&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        local.sip = request.META.get(&lt;span class=&quot;string&quot;&gt;&amp;#x27;REMOTE_ADDR&amp;#x27;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        local.dip = socket.gethostbyname(socket.gethostname())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        response = self.get_response(request)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        local.status_code = response.status_code&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        local.reason_phrase = response.reason_phrase&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.apiLogger.info(&lt;span class=&quot;string&quot;&gt;&amp;#x27;system-auto&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; response&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="当日所学" scheme="http://yunminitools.cn/categories/%E5%BD%93%E6%97%A5%E6%89%80%E5%AD%A6/"/>
    
    
    <category term="Django" scheme="http://yunminitools.cn/tags/Django/"/>
    
    <category term="编程技巧" scheme="http://yunminitools.cn/tags/%E7%BC%96%E7%A8%8B%E6%8A%80%E5%B7%A7/"/>
    
    <category term="Python" scheme="http://yunminitools.cn/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>算法练习：BM1 反转链表</title>
    <link href="http://yunminitools.cn/2024/02/13/nowcoder-algorithm-test-bm1/"/>
    <id>http://yunminitools.cn/2024/02/13/nowcoder-algorithm-test-bm1/</id>
    <published>2024-02-13T13:32:49.000Z</published>
    <updated>2024-02-13T13:33:30.373Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;题目内容&quot;&gt;题目内容&lt;/h2&gt;
&lt;p&gt;给定一个单链表的头结点pHead(该头节点是有值的，比如在下图，它的val是1)，长度为n，反转该链表后，返回新链表的表头。&lt;/p&gt;
&lt;p&gt;数据范围： 0 ≤ &lt;em&gt;n&lt;/em&gt; ≤1000&lt;/p&gt;
&lt;p&gt;要求：空间复杂度 &lt;em&gt;O&lt;/em&gt;(1) ，时间复杂度 &lt;em&gt;O&lt;/em&gt;(&lt;em&gt;n&lt;/em&gt;) 。&lt;/p&gt;
&lt;p&gt;如当输入链表{1,2,3}时，&lt;/p&gt;
&lt;p&gt;经反转后，原链表变为{3,2,1}，所以对应的输出为{3,2,1}。&lt;/p&gt;
&lt;h2 id=&quot;我的思路&quot;&gt;我的思路&lt;/h2&gt;
&lt;p&gt;在遍历链表时，将当前节点的next 指针改为指向前一个节点。由于节点没有引用其前一个节点，因此必须事先存储其前一个节点。在更改引用之前，还需要存储后一个节点。最后返回新的头引用。借用网上一个图解：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn.yunminitools.cn/blog/02_13_bm1_test.gif&quot; alt=&quot; &quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="日常练习" scheme="http://yunminitools.cn/categories/%E6%97%A5%E5%B8%B8%E7%BB%83%E4%B9%A0/"/>
    
    
    <category term="编程技巧" scheme="http://yunminitools.cn/tags/%E7%BC%96%E7%A8%8B%E6%8A%80%E5%B7%A7/"/>
    
    <category term="Python" scheme="http://yunminitools.cn/tags/Python/"/>
    
    <category term="算法" scheme="http://yunminitools.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
</feed>
